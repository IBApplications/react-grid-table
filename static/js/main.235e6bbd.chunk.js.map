{"version":3,"sources":["../../src/components/Cell.jsx","../../src/components/ColumnVisibility.jsx","../../src/components/Footer.jsx","../../src/components/Header.jsx","../../src/hooks/useResizeEvents.jsx","../../src/hooks/useTableManager.jsx","../../src/defaultIcons.js","../../src/components/HeaderCell.jsx","../../src/components/Loader.jsx","../../src/components/NoResults.jsx","../../src/components/PopoverButton.jsx","../../src/hooks/useDetectClickOutside.jsx","../../src/components/Row.jsx","../../src/components/Search.jsx","../../src/components/Information.jsx","../../src/components/PageSize.jsx","../../src/components/Pagination.jsx","../../node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/object-assign/index.js","../../node_modules/react-is/cjs/react-is.development.js","../../node_modules/react-is/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/checkPropTypes.js","../../node_modules/prop-types/factoryWithTypeCheckers.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../src/index.js","components/Username.jsx","App.js","index.js"],"names":["Cell","props","style","forwardRef","params","tableHasSelection","handlers","toggleItemSelection","rowsData","updatedRow","visibleColumns","columnsData","additionalProps","cell","value","column","data","highlightSearch","searchText","getHighlightedText","classNames","rowIndex","colIndex","isSelected","disableSelection","field","moreProps","minWidth","maxWidth","event","onRowClick","e","document","c","rowId","callback","disabled","className","type","onChange","onClick","checked","tabIndex","autoFocus","setRow","ColumnVisibility","tableManager","textConfig","columnVisibilityIcon","icons","columnVisibility","title","buttonChildren","popoverChildren","columns","col","label","cd","key","htmlFor","id","Footer","showRowsInformation","items","components","informationComponent","pageSizeComponent","Pagination","paginationComponent","handlePageSizeChange","totalCount","pageCount","pageItems","selectedCount","selectedRowsIds","isPaginated","options","page","Header","showColumnVisibilityManager","columnVisibilityComponent","Search","searchComponent","toggleColumnVisibility","showSearch","isColumnReordering","loader","width","height","viewBox","xmlns","fill","fillRule","transform","strokeWidth","strokeOpacity","cx","cy","r","stroke","d","attributeName","from","to","dur","repeatCount","clearSelection","strokeLinecap","strokeLinejoin","sortAscending","sortDescending","search","lastPos","SortableItem","SortableElement","data-column-id","index","DragHandle","SortableHandle","SelectAll","selectAllRef","useRef","updateSelectedItems","rowIdField","selectableItemsIds","it","getIsRowSelectable","item","selectAllIsChecked","si","selectAllIsDisabled","isSelectAllIndeterminate","useEffect","selectedIds","itemId","s","isIndeterminate","ref","HeaderCell","tableRef","refs","disableColumnsReorder","dragHandleComponent","onResizeEnd","sortDescendingIcon","headerCell","resizeHandleRef","useState","target","sortCallback","sortEndCallback","window","onResize","handleResize","removeResizeListeners","useResizeEvents","containerEl","gridTemplateColumns","currentColWidth","diff","gtcArr","newGridTemplateColumns","setColumns","setTarget","isPinnedRight","isPinnedLeft","classes","isHeaderSticky","colId","isAsc","sort","sortingProps","handleSort","columnId","collection","Loader","NoResults","PopoverButton","initialIsVisible","handleClickOutside","setIsComponentVisible","useDetectClickOutside","isComponentVisible","Row","measureRef","isVirtualScrolling","rowVirtualizer","minHeight","start","isEdit","getIsRowEditable","searchIcon","name","Information","clearSelectionIcon","rows","PageSize","op","totalPages","backButtonDisabled","nextButtonDisabled","b","Symbol","for","f","g","h","k","l","m","n","p","q","t","v","w","x","y","z","a","u","$$typeof","A","getOwnPropertySymbols","module","require$$0","Object","prototype","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","TypeError","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","checkPropTypes","typeSpecs","values","location","componentName","getStack","resetWarningCache","Function","call","bind","emptyFunction","emptyFunctionWithReset","shim","propName","propFullName","secret","ReactPropTypesSecret","Error","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","PropTypes","require$$2","SortableList","SortableContainer","GridTable","rgtRef","pageSize","useMemo","cols","isPinnedColumn","idx","isVisibleColumn","resizable","pinned","visible","getValue","setValue","searchable","editable","sortable","isAscending","aa","bb","conf","coldef","conf2","displayValue","aVal","bVal","Math","lastColIsPinned","virtualColConfig","totalRows","selected","rowsPerPage","of","prev","next","scrollingRef","React","scrollToFn","parentRef","startTime","Date","requestAnimationFrame","run","elapsed","progress","easeInOutQuint","interpolated","offset","defaultScrollTo","setCols","setUpdatedRow","rowEditId","setPage","setSelectedRowsIds","useVirtual","size","rowVirtualizerProps","setPageSize","itemIndex","goToPage","handlePageChange","setTimeout","setSearchText","text","re","RegExp","searchTerm","restArr","restItemsLength","highlightedSearch","el","setSort","onColumnReorderEnd","headerComponent","footerComponent","loaderComponent","noResultsComponent","searchMinChars","pageSizes","defaultIcons","handleRowEditIdChange","useTableManager","rest","axis","lockToContainerEdges","distance","lockAxis","useDragHandle","onSortStart","sortData","onColumnReorderStart","onSortEnd","colDefNewIndex","oc","colDefOldIndex","columnsClone","display","overflow","flex","gridTemplateRows","isLoading","vr","minColumnWidth","row","editRowId","cellProps","headerCellProps","onColumnsChange","onSearchChange","onSelectedRowsChange","onSortChange","onRowEditIdChange","onLoad","Username","position","padding","alignItems","Fragment","src","avatar","alt","top","right","bottom","border","borderBottom","outline","fontSize","fontFamily","marginLeft","whiteSpace","textOverflow","EDIT_SVG","CANCEL_SVG","SAVE_SVG","styles","select","margin","buttonsCellContainer","justifyContent","editButton","background","cursor","borderRadius","boxShadow","buttonsCellEditorContainer","cancelButton","marginRight","saveButton","App","setEditRowId","setRowsData","setLoading","setTableManager","cellRenderer","editorCellRenderer","reverse","rowsClone","updatedRowIndex","findIndex","MOCK_DATA","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.235e6bbd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Cell = (props) => {\r\n\r\n    let {\r\n        rowId,\r\n        data,\r\n        column,\r\n        rowIndex,\r\n        colIndex,\r\n        isEdit,\r\n        disableSelection,\r\n        isSelected,\r\n        tableManager,\r\n        style = {},\r\n        forwardRef,\r\n    } = props;\r\n\r\n    let {\r\n        params: {\r\n            searchText,\r\n            highlightSearch,\r\n            searchMinChars,\r\n            tableHasSelection,\r\n        },\r\n        handlers: {\r\n            onRowClick,\r\n            handleRowEdit,\r\n            getHighlightedText,\r\n            toggleItemSelection\r\n        },\r\n        rowsData: {\r\n            rowIdField,\r\n            updatedRow,\r\n        },\r\n        columnsData: {\r\n            visibleColumns\r\n        },\r\n        additionalProps: {\r\n            cell: additionalProps\r\n        }\r\n    } = tableManager;\r\n\r\n    let value = column.getValue?.({ value: (updatedRow?.[rowIdField] === rowId) ? updatedRow[column.field] : data[column.field], column: column })?.toString?.();\r\n\r\n    if (column.searchable !== false && updatedRow?.[rowIdField] !== rowId && highlightSearch !== false && searchText && searchText.length >= searchMinChars && value?.toLowerCase?.()?.includes?.(searchText.toLowerCase())) {\r\n        value = getHighlightedText(value, searchText);\r\n    }\r\n\r\n    let classNames = column.id === 'checkbox' ?\r\n        `rgt-cell rgt-cell-checkbox rgt-row-${rowIndex} rgt-row-${(rowIndex + 1) % 2 === 0 ? 'even' : 'odd'}${column.pinned && colIndex === 0 ? ' rgt-cell-pinned rgt-cell-pinned-left' : ''}${column.pinned && colIndex === visibleColumns.length - 1 ? ' rgt-cell-pinned rgt-cell-pinned-right' : ''}${isSelected ? ' rgt-row-selected' : ''} ${column.className}`\r\n        :\r\n        column.id === 'virtual' ?\r\n            `rgt-cell rgt-cell-virtual rgt-row-${rowIndex} rgt-row-${(rowIndex + 1) % 2 === 0 ? 'even' : 'odd'}${!tableHasSelection ? '' : disableSelection ? ' rgt-row-not-selectable' : ' rgt-row-selectable'}${isSelected ? ' rgt-row-selected' : ''}`\r\n            :\r\n            `rgt-cell rgt-cell-${column.field} rgt-row-${rowIndex} rgt-row-${(rowIndex + 1) % 2 === 0 ? 'even' : 'odd'}${!tableHasSelection ? '' : disableSelection ? ' rgt-row-not-selectable' : ' rgt-row-selectable'}${column.pinned && colIndex === 0 ? ' rgt-cell-pinned rgt-cell-pinned-left' : ''}${column.pinned && colIndex === visibleColumns.length - 1 ? ' rgt-cell-pinned rgt-cell-pinned-right' : ''}${isSelected ? ' rgt-row-selected' : ''}  ${column.className}`\r\n\r\n    let moreProps = {};\r\n    switch (column.id) {\r\n        case 'virtual':\r\n            break;\r\n    \r\n        default:\r\n            style = { ...style, ...additionalProps?.style, minWidth: column.minWidth, maxWidth: column.maxWidth }\r\n            break;\r\n    }\r\n    if (onRowClick) moreProps.onClick = event => onRowClick({ rowIndex, data, column, event });\r\n    return (\r\n        <div\r\n            className={classNames.trim()}\r\n            onMouseEnter={e => document.querySelectorAll(`.rgt-row-${rowIndex}`).forEach(c => c.classList.add('rgt-row-hover'))}\r\n            onMouseLeave={e => document.querySelectorAll(`.rgt-row-${rowIndex}`).forEach(c => c.classList.remove('rgt-row-hover'))}\r\n            data-row-id={(rowId).toString()}\r\n            data-row-index={rowIndex.toString()}\r\n            data-column-id={column.id.toString()}\r\n            {...moreProps}\r\n            {...additionalProps}\r\n            style={style}\r\n            ref={forwardRef}\r\n        >\r\n            {\r\n                column.id === 'virtual' ?\r\n                    null\r\n                    :\r\n                column.id === 'checkbox' ?\r\n                    (column.cellRenderer) ?\r\n                            column.cellRenderer({ isSelected, callback: e => toggleItemSelection(rowId), disabled: disableSelection, rowIndex })\r\n                        :\r\n                        <input\r\n                            className={disableSelection ? 'rgt-disabled' : 'rgt-clickable'}\r\n                            type=\"checkbox\"\r\n                            onChange={e => toggleItemSelection(rowId)}\r\n                            onClick={e => e.stopPropagation()}\r\n                            checked={isSelected}\r\n                            disabled={disableSelection}\r\n                        />\r\n                    :\r\n                column.editable !== false && isEdit ?\r\n                    column.editorCellRenderer ?\r\n                        column.editorCellRenderer({ tableManager, value, field: column.field, onChange: handleRowEdit, data, column, rowIndex })\r\n                        :\r\n                        <div className='rgt-cell-inner rgt-cell-editor'>\r\n                            {\r\n                                <div className='rgt-cell-editor-inner'>\r\n                                    <input\r\n                                        tabIndex={0}\r\n                                        autoFocus={visibleColumns.findIndex(c => c.id !== 'checkbox' && c.editable !== false) === colIndex}\r\n                                        className='rgt-cell-editor-input'\r\n                                        type=\"text\"\r\n                                        value={value}\r\n                                                onChange={e => column.setValue({ value: e.target.value, data, setRow: handleRowEdit, column })}\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    :\r\n                    column.cellRenderer ?\r\n                        column.cellRenderer({ tableManager, value, data, column, rowIndex, searchText })\r\n                        :\r\n                        <div className='rgt-cell-inner rgt-text-truncate'>{value}</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cell;","import React from 'react';\r\nimport { PopoverButton } from './';\r\n\r\nconst ColumnVisibility = props => {\r\n\r\n    let {\r\n        columns,\r\n        onChange,\r\n        tableManager,\r\n    } = props;\r\n\r\n    let {\r\n        params: {\r\n            textConfig\r\n        },\r\n        icons: {\r\n            columnVisibility: columnVisibilityIcon\r\n        },\r\n    } = tableManager;\r\n\r\n    \r\n    return (\r\n        <PopoverButton\r\n            title={textConfig.columnVisibility}\r\n            buttonChildren={columnVisibilityIcon}\r\n            popoverChildren={\r\n                columns.filter(col => !col.pinned).map((cd, idx) => {\r\n                    let label = cd.label || cd.field || cd.id;\r\n\r\n                    return (\r\n                        <div key={idx} className='rgt-clickable rgt-columns-manager-popover-row'>\r\n                            <label htmlFor={`checkbox-${idx}`} title={label} onClick={e => onChange(cd.id)} className='rgt-clickable rgt-flex-child rgt-text-truncate'>{label}</label>\r\n                            <input\r\n                                id={`checkbox-${idx}`}\r\n                                className='rgt-clickable'\r\n                                type=\"checkbox\"\r\n                                onChange={e => { }}\r\n                                checked={cd.visible !== false}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default ColumnVisibility;","import React from 'react';\r\n\r\nconst Footer = (props) => {\r\n\r\n    let { \r\n        tableManager\r\n    } = props;\r\n\r\n    let {\r\n        params: {\r\n            page,\r\n            pageSize,\r\n            pageSizes,\r\n            isPaginated,\r\n            showRowsInformation\r\n        },\r\n        rowsData: {\r\n            selectedRowsIds,\r\n            pageItems,\r\n            items,\r\n        },\r\n        components: {\r\n            informationComponent: Information,\r\n            pageSizeComponent: PageSize,\r\n            paginationComponent: Pagination\r\n        },\r\n        handlers: {\r\n            handlePagination,\r\n            handlePageSizeChange,\r\n        },\r\n    } = tableManager;\r\n\r\n\r\n    return (\r\n        <div className=\"rgt-footer\">\r\n            <div className='rgt-footer-items-information'>\r\n                {\r\n                    showRowsInformation !== false ?\r\n                        <Information \r\n                            totalCount={ items.length } \r\n                            pageCount={ pageItems.length } \r\n                            selectedCount={ selectedRowsIds.length } \r\n                            tableManager={ tableManager } \r\n                        />\r\n                        :\r\n                        null\r\n                }\r\n            </div>\r\n            {\r\n                isPaginated ?\r\n                    <div className='rgt-footer-right-container'>\r\n                        <PageSize \r\n                            value={ pageSize } \r\n                            onChange={ handlePageSizeChange } \r\n                            options={ pageSizes } \r\n                            tableManager={ tableManager } \r\n                        />\r\n                        <Pagination \r\n                            page={ page } \r\n                            onChange={ handlePagination } \r\n                            tableManager={ tableManager } \r\n                        />\r\n                    </div>\r\n                    :\r\n                    null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Header = (props) => {\r\n\r\n    let {\r\n        tableManager\r\n    } = props;\r\n\r\n    let { \r\n        params: {\r\n            showSearch,\r\n            searchText,\r\n            showColumnVisibilityManager,\r\n        },\r\n        components: {\r\n            columnVisibilityComponent: ColumnVisibility,\r\n            searchComponent: Search,\r\n        },\r\n        columnsData: {\r\n            columns,\r\n        },\r\n        handlers: {\r\n            handleSearchChange,\r\n            toggleColumnVisibility,\r\n        }\r\n    } = tableManager;\r\n\r\n    return (\r\n        <div className='rgt-header-container'>\r\n            {\r\n                showSearch !== false ?\r\n                    <Search value={searchText} onChange={handleSearchChange} tableManager={tableManager}/>\r\n                    :\r\n                    <span></span>\r\n            }\r\n            {\r\n                showColumnVisibilityManager !== false ?\r\n                    <ColumnVisibility columns={columns} onChange={toggleColumnVisibility} tableManager={tableManager}/>\r\n                    :\r\n                    <span></span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import {useEffect} from 'react';\r\n\r\nconst useResizeEvents = (target, column, sortCallback, sortEndCallback) => {\r\n\r\n    useEffect(() => {\r\n        if(target) target.addEventListener('mousedown', onResize);\r\n\r\n        return () => {\r\n            if(target) target.removeEventListener('mousedown', onResize)\r\n            window.removeEventListener('mousemove', handleResize);\r\n            window.removeEventListener('mouseup', removeResizeListeners);\r\n        }\r\n    }, [target, column, sortCallback, sortEndCallback])\r\n\r\n    const onResize = (e) => {\r\n        e.stopPropagation()\r\n        window.addEventListener('mousemove', handleResize);\r\n        window.addEventListener('mouseup', removeResizeListeners);\r\n    }\r\n\r\n    const handleResize = (e) => {\r\n        sortCallback({e, target, column});\r\n    }\r\n    \r\n    const removeResizeListeners = (e) => {\r\n        sortEndCallback();\r\n        window.removeEventListener('mousemove', handleResize);\r\n        window.removeEventListener('mouseup', removeResizeListeners);\r\n    }\r\n}\r\n\r\nexport default useResizeEvents;","import React, { useState, useEffect, useRef, useMemo } from 'react';\r\nimport { useVirtual } from 'react-virtual';\r\nimport { Search, ColumnVisibility, Header, Footer, Loader, NoResults, Information, PageSize, Pagination } from '../components/';\r\nimport defaultIcons from './../defaultIcons'; \r\n\r\nvar isColumnReordering;\r\n\r\nexport default function useTableManager(props) {\r\n\r\n\r\n    // **************** State ****************\r\n\r\n    let [columns, setCols] = useState(props.columns);\r\n    let [sort, setSort] = useState(props.sort || {});\r\n    let [page, setPage] = useState(1);\r\n    let [updatedRow, setUpdatedRow] = useState(null);\r\n    let [searchText, setSearchText] = useState(props.searchText || \"\");\r\n    let [pageSize, setPageSize] = useState(props.pageSize || 20);\r\n    let [selectedRowsIds, setSelectedRowsIds] = useState([]);\r\n    let [tableManager] = useState({\r\n        refs: {},\r\n        handlers: {},\r\n        components: {},\r\n        columnsData: {},\r\n        params: {},\r\n        rowsData: {},\r\n        additionalProps: {},\r\n        icons: {},\r\n        rowVirtualizer: {}\r\n    });\r\n\r\n    // **************** Refs ****************\r\n\r\n    const tableRef = useRef(null);\r\n    const rgtRef = useRef(null);\r\n\r\n\r\n    // **************** Table params ****************\r\n\r\n    searchText = props.searchText ?? searchText;\r\n    selectedRowsIds = props.selectedRowsIds ?? selectedRowsIds;\r\n    sort = props.sort ?? sort;\r\n    page = props.page ?? page;\r\n    pageSize = props.pageSize ?? pageSize;\r\n    columns = useMemo(getColumns, [props.columns, columns, props.minColumnWidth]); \r\n    let { pageItems, totalPages } = useMemo(getPageItems, [props.rows, sort, page, pageSize, totalPages, searchText])\r\n\r\n    let visibleColumns = columns.filter(cd => cd.visible !== false);\r\n\r\n    let lastColIsPinned = visibleColumns[visibleColumns.length-1]?.pinned;\r\n\r\n    let virtualColConfig = {id: 'virtual', visible: true, width: \"auto\"};\r\n    if(!lastColIsPinned) visibleColumns.push(virtualColConfig) \r\n    else visibleColumns.splice(visibleColumns.length-1, 0, virtualColConfig);\r\n\r\n    let tableHasSelection = !!columns.find(cd => cd.id === 'checkbox');\r\n\r\n    let textConfig = {\r\n        search: 'Search:',\r\n        totalRows: 'Total rows:',\r\n        rows: 'Rows:',\r\n        selected: 'Selected',\r\n        rowsPerPage: 'Rows per page:',\r\n        page: 'Page:',\r\n        of: 'of',\r\n        prev: 'Prev',\r\n        next: 'Next',\r\n        columnVisibility: 'Column visibility',\r\n        ...props.textConfig \r\n    }\r\n\r\n    // implements smooth scrolling when using virtual scrolling\r\n    const scrollingRef = React.useRef();\r\n    const scrollToFn = React.useCallback((offset, defaultScrollTo) => {\r\n        const duration = 1000;\r\n        const start = parentRef.current.scrollTop;\r\n        const startTime = (scrollingRef.current = Date.now());\r\n\r\n        const run = () => {\r\n            if (scrollingRef.current !== startTime) return;\r\n            const now = Date.now();\r\n            const elapsed = now - startTime;\r\n            const progress = easeInOutQuint(Math.min(elapsed / duration, 1));\r\n            const interpolated = start + (offset - start) * progress;\r\n\r\n            if (elapsed < duration) {\r\n                defaultScrollTo(interpolated);\r\n                requestAnimationFrame(run);\r\n            } else {\r\n                defaultScrollTo(interpolated);\r\n            }\r\n        };\r\n\r\n        requestAnimationFrame(run);\r\n    }, []);\r\n\r\n    if (props.isVirtualScrolling) {\r\n        tableManager.rowVirtualizer = Object.assign(tableManager.rowVirtualizer, useVirtual({\r\n            size: pageItems.length,\r\n            parentRef: tableRef,\r\n            scrollToFn,\r\n            ...props.rowVirtualizerProps\r\n        }));\r\n    }\r\n\r\n    tableManager.refs = Object.assign(tableManager.refs, {\r\n        tableRef,\r\n        rgtRef\r\n    })\r\n    tableManager.handlers = Object.assign(tableManager.handlers, {\r\n        handlePageSizeChange,\r\n        handleRowEdit,\r\n        updateSelectedItems,\r\n        toggleItemSelection,\r\n        handlePagination,\r\n        toggleColumnVisibility,\r\n        handleSearchChange,\r\n        handleRowEditIdChange,\r\n        getHighlightedText,\r\n        onRowClick: props.onRowClick,\r\n        getIsRowEditable: props.getIsRowEditable,\r\n        getIsRowSelectable: props.getIsRowSelectable,\r\n        handleSort,\r\n        setColumns,\r\n        onResize: props.onResize,\r\n        onResizeEnd: props.onResizeEnd,\r\n        onColumnReorderStart,\r\n        onColumnReorderEnd\r\n    })\r\n    tableManager.components = Object.assign(tableManager.components, {\r\n        searchComponent: props.searchComponent || Search,\r\n        columnVisibilityComponent: props.columnVisibilityComponent || ColumnVisibility,\r\n        headerComponent: props.headerComponent || Header,\r\n        footerComponent: props.footerComponent || Footer,\r\n        loaderComponent: props.loaderComponent || Loader,\r\n        noResultsComponent: props.noResultsComponent || NoResults,\r\n        informationComponent: props.informationComponent || Information,\r\n        pageSizeComponent: props.pageSizeComponent || PageSize,\r\n        paginationComponent: props.paginationComponent || Pagination,\r\n        dragHandleComponent: props.dragHandleComponent || null,\r\n    })\r\n    tableManager.columnsData = Object.assign(tableManager.columnsData, {\r\n        columns,\r\n        visibleColumns,\r\n    })\r\n    tableManager.params = Object.assign(tableManager.params, {\r\n        lastColIsPinned,\r\n        sort,\r\n        page,\r\n        searchText,\r\n        highlightSearch: props.highlightSearch,\r\n        searchMinChars: props.searchMinChars,\r\n        totalPages,\r\n        pageSize,\r\n        tableHasSelection,\r\n        showSearch: props.showSearch,\r\n        showRowsInformation: props.showRowsInformation,\r\n        showColumnVisibilityManager: props.showColumnVisibilityManager,\r\n        isHeaderSticky: props.isHeaderSticky !== false,\r\n        isPaginated: props.isPaginated,\r\n        isVirtualScrolling: props.isVirtualScrolling,\r\n        disableColumnsReorder: props.disableColumnsReorder,\r\n        pageSizes: props.pageSizes,\r\n        textConfig\r\n    })\r\n    tableManager.rowsData = Object.assign(tableManager.rowsData, {\r\n        items: props.rows,\r\n        pageItems,\r\n        updatedRow,\r\n        selectedRowsIds,\r\n        rowIdField: props.rowIdField\r\n    })\r\n    tableManager.additionalProps = Object.assign(tableManager.additionalProps, {\r\n        headerCell: props.headerCellProps || {},\r\n        cell: props.cellProps || {},\r\n        rowVirtualizer: props.rowVirtualizerProps || {}\r\n    })\r\n    tableManager.icons = Object.assign(tableManager.icons, {\r\n        sortAscending: props.icons?.sortAscending || defaultIcons.sortAscending,\r\n        sortDescending: props.icons?.sortDescending || defaultIcons.sortDescending,\r\n        clearSelection: props.icons?.clearSelection || defaultIcons.clearSelection,\r\n        columnVisibility: props.icons?.columnVisibility || defaultIcons.columnVisibility,\r\n        loader: props.icons?.loader || defaultIcons.loader,\r\n        search: props.icons?.search || defaultIcons.search\r\n    })\r\n\r\n    // **************** Life cycles ****************\r\n\r\n    useEffect(() => {\r\n        if (page !== 1) handlePageChange(1);\r\n    }, [searchText, pageSize])\r\n\r\n    useEffect(() => {\r\n        if (updatedRow) handleRowEditIdChange(null);\r\n    }, [searchText, sort, page])\r\n\r\n    useEffect(() => {\r\n        setUpdatedRow(pageItems.find(item => item[props.rowIdField] === props.editRowId) || null);\r\n    }, [props.editRowId])\r\n\r\n    useEffect(() => {\r\n        props.onLoad?.(tableManager)\r\n    }, [])\r\n\r\n\r\n    // **************** Handlers ****************\r\n\r\n    function getPageItems() {\r\n        let pageItems = [...props.rows];\r\n\r\n        var conf = columns.reduce((conf, coldef) => {\r\n            conf[coldef.field] = coldef;\r\n            return conf;\r\n        }, {})\r\n        var conf2 = columns.reduce((conf, coldef) => {\r\n            conf[coldef.id] = coldef;\r\n            return conf;\r\n        }, {})\r\n\r\n        if (searchText.length >= props.searchMinChars) {\r\n            pageItems = pageItems.filter(item => Object.keys(item).some(key => {\r\n                if (conf[key] && conf[key].searchable !== false) {\r\n                    let displayValue = conf[key].getValue({ value: item[key], column: conf[key] });\r\n                    return conf[key].search({ value: displayValue.toString(), searchText: searchText });\r\n                }\r\n                return false;\r\n            }));\r\n        }\r\n\r\n        if (sort?.colId) {\r\n            pageItems.sort((a, b) => {\r\n                let aVal = conf2[sort.colId].getValue({ value: a[conf2[sort.colId].field], column: conf2[sort.colId] });\r\n                let bVal = conf2[sort.colId].getValue({ value: b[conf2[sort.colId].field], column: conf2[sort.colId] });\r\n\r\n                if (conf2[sort.colId].sortable === false) return 0;\r\n                return conf2[sort.colId].sort({ a: aVal, b: bVal, isAscending: sort.isAsc });\r\n            });\r\n        }\r\n\r\n        let totalPages = (pageItems.length % pageSize > 0) ? Math.trunc(pageItems.length / pageSize) + 1 : Math.trunc(pageItems.length / pageSize);\r\n\r\n        if (props.isPaginated !== false) pageItems = pageItems.slice((pageSize * page - pageSize), (pageSize * page));\r\n\r\n        return { pageItems, totalPages }\r\n    }\r\n\r\n    function setColumns(cols){\r\n        if (!props.onColumnsChange) setCols(cols);\r\n        else props.onColumnsChange(cols);\r\n    }\r\n\r\n    function handleRowEditIdChange(rowEditId){\r\n        setUpdatedRow(rowEditId && pageItems.find(item => item[props.rowIdField] === rowEditId) || null);\r\n        props.onRowEditIdChange?.(rowEditId);\r\n    }\r\n\r\n    function handleRowEdit(updatedRow) {\r\n        setUpdatedRow(updatedRow);\r\n    }\r\n\r\n    function getColumns() {\r\n        let cols = props.onColumnsChange ? props.columns : columns;\r\n        return cols.map((cd, idx) => { \r\n\r\n            let isPinnedColumn =  idx === 0 && cd.pinned || idx === cols.length-1 && cd.pinned;\r\n            let isVisibleColumn = cd.visible !== false;\r\n            \r\n            if(cd.id === 'checkbox') return {\r\n                className: '',\r\n                width: 'max-content',\r\n                minWidth: 0,\r\n                maxWidth: null,\r\n                resizable: false,\r\n                ...cd,\r\n                pinned: isPinnedColumn,\r\n                visible: isVisibleColumn\r\n            };\r\n            \r\n            return {\r\n                label: cd.field,\r\n                className: '',\r\n                width: '200px',\r\n                minWidth: cd.minWidth || props.minColumnWidth,\r\n                maxWidth: null,\r\n                getValue: ({value, column}) => value, \r\n                setValue: ({ value, data, setRow, column }) => { setRow({ ...data, [column.field]: value}) },\r\n                searchable: true,\r\n                editable: true,\r\n                sortable: true,\r\n                resizable: true,\r\n                search: ({value, searchText}) => value.toString().toLowerCase().includes(searchText.toLowerCase()), \r\n                sort: ({a, b, isAscending}) => {\r\n                    let aa = typeof a === 'string' ? a.toLowerCase() : a;\r\n                    let bb = typeof b === 'string' ? b.toLowerCase() : b;\r\n                    if(aa > bb) return isAscending ? 1 : -1;\r\n                    else if(aa < bb) return isAscending ? -1 : 1;\r\n                    return 0;\r\n                }, \r\n                ...cd,\r\n                pinned: isPinnedColumn,\r\n                visible: isVisibleColumn\r\n            }\r\n        });\r\n    }\r\n\r\n    function onColumnReorderStart(sortData) {\r\n        isColumnReordering = true;\r\n        props.onColumnReorderStart?.(sortData);\r\n    }\r\n\r\n    function onColumnReorderEnd(sortData) {\r\n        setTimeout(() => { isColumnReordering = false }, 0);\r\n        props.onColumnReorderEnd?.(sortData);\r\n    }\r\n\r\n    function handleSort(colId, isAsc) {\r\n        if (isColumnReordering) return;\r\n\r\n        if (props.sort === undefined || props.onSortChange === undefined) setSort({colId, isAsc});\r\n        props.onSortChange?.({colId, isAsc});\r\n    }\r\n\r\n    function handleSearchChange(searchText) {\r\n        if (props.searchText === undefined || props.onSearchChange === undefined) setSearchText(searchText);\r\n        props.onSearchChange?.(searchText);\r\n    }\r\n\r\n    function handlePageChange(page) {\r\n        if (props.page === undefined || props.onPageChange === undefined) setPage(page);\r\n        props.onPageChange?.(page);\r\n    }\r\n\r\n    function handlePageSizeChange(pageSize) {\r\n        if (props.pageSize === undefined || props.onPageSizeChange === undefined) setPageSize(pageSize);\r\n        props.onPageSizeChange?.(pageSize);\r\n    }\r\n\r\n    function handlePagination(goToPage) {\r\n        if((goToPage >= 1) && (goToPage <= totalPages)) {\r\n            handlePageChange(goToPage);\r\n            setTimeout(() => { tableRef.current.scrollTop = 0 }, 0);\r\n        };\r\n    }\r\n\r\n    function updateSelectedItems(newSelectedItems) {\r\n        if (props.selectedRowsIds === undefined || props.onSelectedRowsChange === undefined) setSelectedRowsIds(newSelectedItems);\r\n        props.onSelectedRowsChange?.(newSelectedItems);\r\n    }\r\n\r\n    function toggleItemSelection(rowId) {\r\n        selectedRowsIds = [...selectedRowsIds];\r\n\r\n        let itemIndex = selectedRowsIds.findIndex(s => s === rowId);\r\n\r\n        if(itemIndex !== -1) selectedRowsIds.splice(itemIndex, 1);\r\n        else selectedRowsIds.push(rowId);\r\n\r\n        updateSelectedItems(selectedRowsIds);\r\n    }\r\n\r\n    function toggleColumnVisibility(colId) {\r\n        columns = [...columns];\r\n        let colIndex = columns.findIndex(cd => cd.id === colId);\r\n\r\n        columns[colIndex].visible = !columns[colIndex].visible;\r\n        setColumns(columns);\r\n    }\r\n\r\n    function getHighlightedText(text, searchTerm) {\r\n        if(text === searchTerm) return <span className='rgt-search-highlight'>{text}</span> ;\r\n\r\n        let re = new RegExp(searchTerm,\"gi\");\r\n        let restArr = text.split(re, text.length);\r\n        let restItemsLength = 0;\r\n\r\n        let highlightedSearch = restArr.map((a, idx) => {\r\n            restItemsLength += a.length;\r\n            let el = null;\r\n\r\n            if(a) {\r\n                el = (\r\n                    <React.Fragment key={idx}>\r\n                        <span>{a}</span> \r\n                        { \r\n                            (restArr.length !== idx+1) ? \r\n                                <span className='rgt-search-highlight'>\r\n                                    {text.slice(restItemsLength, searchTerm.length + restItemsLength)}\r\n                                </span> \r\n                                : null\r\n                        }\r\n                    </React.Fragment>\r\n                )      \r\n            } else if(restArr.length !== idx+1) {\r\n                el = (\r\n                    <span key={idx} className='rgt-search-highlight'>\r\n                        {text.slice(restItemsLength, searchTerm.length + restItemsLength)}\r\n                    </span> \r\n                )      \r\n            }\r\n\r\n            restItemsLength += searchTerm.length;\r\n\r\n            return el;\r\n        });\r\n\r\n        return <span>{highlightedSearch}</span>;\r\n    }\r\n\r\n    return tableManager\r\n}","import React from 'react';\r\n\r\nconst LOADER = <svg width=\"46\" height=\"46\" viewBox=\"-2 -2 42 42\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g fill=\"none\" fillRule=\"evenodd\">\r\n        <g transform=\"translate(1 1)\" strokeWidth=\"3\">\r\n            <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" stroke=\"#9e9e9e\" />\r\n            <path d=\"M36 18c0-9.94-8.06-18-18-18\" stroke=\"#607D8B\">\r\n                <animateTransform\r\n                    attributeName=\"transform\"\r\n                    type=\"rotate\"\r\n                    from=\"0 18 18\"\r\n                    to=\"360 18 18\"\r\n                    dur=\"1s\"\r\n                    repeatCount=\"indefinite\"/>\r\n            </path>\r\n        </g>\r\n    </g>\r\n</svg>;\r\n\r\nconst TRASH_ICON = <svg height=\"16\" viewBox=\"0 0 21 21\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g fill=\"none\" fillRule=\"evenodd\" stroke=\"#2a2e3b\" strokeLinecap=\"round\" strokeLinejoin=\"round\" transform=\"translate(3 2)\">\r\n        <path d=\"m2.5 2.5h10v12c0 1.1045695-.8954305 2-2 2h-6c-1.1045695 0-2-.8954305-2-2zm5-2c1.1045695 0 2 .8954305 2 2h-4c0-1.1045695.8954305-2 2-2z\"/>\r\n        <path d=\"m.5 2.5h14\"/>\r\n        <path d=\"m5.5 5.5v8\"/>\r\n        <path d=\"m9.5 5.5v8\"/>\r\n    </g>\r\n</svg>;\r\n\r\nconst MENU_ICON = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 18c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3z\"/>\r\n</svg>;\r\n\r\nconst SORT_ASCENDING_ICON = <React.Fragment>&uarr;</React.Fragment>;\r\n\r\nconst SORT_DESCENDING_ICON = <React.Fragment>&darr;</React.Fragment>;\r\n\r\nconst SEARCH_ICON = <React.Fragment>&#9906;</React.Fragment>;\r\n\r\nexport default {\r\n    loader: LOADER,\r\n    clearSelection: TRASH_ICON,\r\n    columnVisibility: MENU_ICON,\r\n    sortAscending: SORT_ASCENDING_ICON,\r\n    sortDescending: SORT_DESCENDING_ICON,\r\n    search: SEARCH_ICON\r\n}","import React, { useRef, useEffect, useState } from 'react';\r\nimport { SortableElement, SortableHandle } from 'react-sortable-hoc';\r\nimport { useResizeEvents } from '../hooks/';\r\n\r\nconst SortableItem = SortableElement(({children, index, columnId, className}) => <div className={className} data-column-id={columnId} key={index}>{children}</div>);\r\nconst DragHandle = SortableHandle(({children, index}) => <React.Fragment>{children}</React.Fragment>);\r\n\r\nconst SelectAll = ({tableManager, column, style}) => {\r\n\r\n    let selectAllRef = useRef(null);\r\n\r\n    let {\r\n        handlers: {\r\n            getIsRowSelectable,\r\n            updateSelectedItems\r\n        },\r\n        rowsData: {\r\n            selectedRowsIds,\r\n            pageItems,\r\n            rowIdField\r\n        }\r\n    } = tableManager;\r\n\r\n    let selectableItemsIds = pageItems.filter(it => getIsRowSelectable(it)).map(item => item[rowIdField]);\r\n    let selectAllIsChecked = selectableItemsIds.length && selectableItemsIds.every(si => selectedRowsIds.find(id => si === id));\r\n    let selectAllIsDisabled = !selectableItemsIds.length;\r\n    let isSelectAllIndeterminate = !!(selectedRowsIds.length && !selectAllIsChecked && selectableItemsIds.some(si => selectedRowsIds.find(id => si === id)));\r\n\r\n    useEffect(() => {\r\n        if (!selectAllRef.current) return;\r\n\r\n        if (isSelectAllIndeterminate) selectAllRef.current.indeterminate = true;\r\n        else selectAllRef.current.indeterminate = false;\r\n    }, [isSelectAllIndeterminate])\r\n\r\n    const onChange = () => {\r\n        let selectedIds = [...selectedRowsIds];\r\n\r\n        if(selectAllIsChecked || isSelectAllIndeterminate) selectedIds = selectedIds.filter(si => !selectableItemsIds.find(itemId => si === itemId));\r\n        else selectableItemsIds.forEach(s => selectedIds.push(s));\r\n        \r\n        updateSelectedItems(selectedIds);\r\n    }\r\n\r\n    return (\r\n        <div className=\"rgt-cell-header-select-all\" style={style}>\r\n            {\r\n                column.headerCellRenderer ?\r\n                    column.headerCellRenderer({ isSelected: selectAllIsChecked, isIndeterminate: isSelectAllIndeterminate, callback: onChange, disabled: selectAllIsDisabled })\r\n                    :\r\n                    <input\r\n                        ref={selectAllRef}\r\n                        className={selectAllIsDisabled ? 'rgt-disabled' : 'rgt-clickable'}\r\n                        disabled={selectAllIsDisabled}\r\n                        type=\"checkbox\"\r\n                        onChange={onChange}\r\n                        checked={selectAllIsChecked}\r\n                    />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nvar lastPos;\r\n\r\nconst HeaderCell = (props) => {\r\n\r\n    let {\r\n        index, \r\n        column,\r\n        tableManager,\r\n        style = {}\r\n    } = props;\r\n\r\n    let {\r\n        refs: {\r\n            tableRef\r\n        },\r\n        params: {\r\n            sort,\r\n            isHeaderSticky,\r\n            disableColumnsReorder\r\n        },\r\n        components: {\r\n            dragHandleComponent\r\n        },\r\n        handlers: {\r\n            handleSort,\r\n            setColumns,\r\n            onResize,\r\n            onResizeEnd\r\n        },\r\n        icons: {\r\n            sortAscending: sortAscendingIcon,\r\n            sortDescending: sortDescendingIcon,\r\n        },\r\n        columnsData: {\r\n            columns,\r\n            visibleColumns\r\n        },\r\n        additionalProps: {\r\n            headerCell: additionalProps\r\n        }\r\n    } = tableManager;\r\n    \r\n    let resizeHandleRef = useRef(null);\r\n\r\n    const [target, setTarget] = useState(resizeHandleRef?.current || null);\r\n\r\n    function handleResize({e, target, column}) {\r\n        let containerEl = tableRef.current;\r\n        let gridTemplateColumns = containerEl.style.gridTemplateColumns;\r\n        let currentColWidth = target.offsetParent.clientWidth;\r\n        if(!lastPos) lastPos = e.clientX;\r\n        \r\n        let diff = lastPos - e.clientX;\r\n\r\n        let colIndex = visibleColumns.findIndex(cd => cd.id === column.id);\r\n\r\n        if (e.clientX > lastPos || e.clientX < lastPos && currentColWidth - diff > column.minWidth) {\r\n            let gtcArr = gridTemplateColumns.split(\" \");\r\n            \r\n            if((column.minWidth && ((currentColWidth - diff) <= column.minWidth)) || (column.maxWidth && ((currentColWidth - diff) >= column.maxWidth))) return;\r\n\r\n            gtcArr[colIndex] = `${currentColWidth - diff}px`;\r\n            let newGridTemplateColumns = gtcArr.join(\" \");\r\n\r\n            containerEl.style.gridTemplateColumns = newGridTemplateColumns;\r\n        }\r\n        \r\n        lastPos = e.clientX;\r\n        onResize?.({event: e, target, column});\r\n    }\r\n\r\n    function handleResizeEnd() {\r\n        lastPos = null;\r\n        let containerEl = tableRef.current;\r\n        let gridTemplateColumns = containerEl.style.gridTemplateColumns;\r\n        let gtcArr = gridTemplateColumns.split(\" \");\r\n        \r\n        columns.forEach(col => {\r\n            let colIndex = visibleColumns.findIndex(cd => cd.id === col.id);\r\n            if (col.visible) {\r\n                col.width = gtcArr[colIndex];\r\n            }\r\n        })\r\n        setColumns(columns);\r\n        onResizeEnd?.();\r\n    }\r\n\r\n    useResizeEvents(target, column, handleResize, handleResizeEnd);\r\n\r\n    useEffect(() => {\r\n        setTarget(resizeHandleRef.current);\r\n    }, [column])\r\n\r\n    let isPinnedRight = column.pinned && index === visibleColumns.length - 1;\r\n    let isPinnedLeft = column.pinned && index === 0;\r\n    let classes = column.id === 'virtual' ? `rgt-cell-header rgt-cell-header-virtual-col${isHeaderSticky ? ' rgt-cell-header-sticky' : ''}`.trim() : `rgt-cell-header rgt-cell-header-${column.id === 'checkbox' ? 'checkbox' : column.field}${(column.sortable !== false && column.id !== 'checkbox' && column.id !== 'virtual') ? ' rgt-clickable' : ''}${column.sortable !== false && column.id !== 'checkbox' ? ' rgt-cell-header-sortable' : ' rgt-cell-header-not-sortable'}${isHeaderSticky ? ' rgt-cell-header-sticky' : ''}${column.resizable !== false ? ' rgt-cell-header-resizable' : ' rgt-cell-header-not-resizable'}${column.searchable !== false && column.id !== 'checkbox' ? ' rgt-cell-header-searchable' : ' rgt-cell-header-not-searchable'}${isPinnedLeft ? ' rgt-cell-header-pinned rgt-cell-header-pinned-left' : ''}${isPinnedRight ? ' rgt-cell-header-pinned rgt-cell-header-pinned-right' : ''} ${column.className}`.trim() \r\n\r\n    let colId = column.id;\r\n    let isAsc = true;\r\n    if (sort.colId === colId) isAsc = sort.isAsc ? false : sort.isAsc === false ? null : true;\r\n    if (isAsc === null) colId = null;\r\n    let sortingProps = (column.sortable !== false && column.id !== 'checkbox' && column.id !== 'virtual') ? { onClick: e => handleSort(colId, isAsc) } : {};\r\n\r\n    style = { ...style, ...additionalProps.style, minWidth: column.minWidth, maxWidth: column.maxWidth };\r\n\r\n    return (\r\n        <div \r\n            data-column-id={(column.id).toString()}\r\n            className={classes}\r\n            {...sortingProps}\r\n            {...additionalProps}\r\n            style={style}\r\n        >\r\n            {\r\n                (column.id !== 'virtual') ?\r\n                    <React.Fragment>\r\n                        <SortableItem \r\n                            className={`rgt-cell-header-inner${column.id === 'checkbox' ? ' rgt-cell-header-inner-checkbox-column' : ''}${!isPinnedRight ? ' rgt-cell-header-inner-not-pinned-right' : '' }`}\r\n                            index={index} \r\n                            disabled={disableColumnsReorder || isPinnedLeft || isPinnedRight}\r\n                            columnId={(column.id).toString()}\r\n                            collection={isPinnedLeft || isPinnedRight ? 0 : 1}\r\n                        >\r\n                            {\r\n                                dragHandleComponent ?\r\n                                    <DragHandle index={index}>{dragHandleComponent()}</DragHandle>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                (column.id === 'checkbox') ? \r\n                                    <SelectAll tableManager={tableManager} column={column} style={style} />\r\n                                    :\r\n                                    column.headerCellRenderer ? \r\n                                        column.headerCellRenderer({label: (typeof column.label === 'string' ? column.label : column.field), column: column})\r\n                                        :\r\n                                        <span className='rgt-text-truncate' data-column-id={(column.id).toString()}>\r\n                                            {typeof column.label === 'string' ? column.label : column.field}\r\n                                        </span>\r\n                            }\r\n                            {\r\n                                (sort.colId === column.id) ? \r\n                                    sort.isAsc ? \r\n                                        <span className='rgt-sort-icon rgt-sort-icon-ascending'>{sortAscendingIcon}</span> \r\n                                        :\r\n                                        sort.isAsc === false ?\r\n                                            <span className='rgt-sort-icon rgt-sort-icon-descending'>{sortDescendingIcon}</span> \r\n                                            : \r\n                                            null\r\n                                    : \r\n                                    null\r\n                            }\r\n                        </SortableItem>\r\n                        {\r\n                            column.resizable !== false ?\r\n                                <span \r\n                                    ref={resizeHandleRef} \r\n                                    className='rgt-resize-handle'\r\n                                    onClick={e => {e.preventDefault(); e.stopPropagation();}}\r\n                                >\r\n                                </span>\r\n                                : null\r\n                        }\r\n                    </React.Fragment>\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderCell;","const Loader = props => {\r\n\r\n    let {\r\n        tableManager,\r\n    } = props;\r\n\r\n    let {\r\n        icons: {\r\n            loader: loaderIcon\r\n        },\r\n    } = tableManager;\r\n\r\n    return loaderIcon\r\n}\r\n\r\nexport default Loader;","const NoResults = props => {\r\n    return 'No Results :('\r\n}\r\n\r\nexport default NoResults;","import React from 'react';\r\nimport { useDetectClickOutside } from '../hooks/';\r\n\r\nconst PopoverButton = props => {\r\n\r\n    const { ref, isComponentVisible, setIsComponentVisible } = useDetectClickOutside(false);\r\n\r\n    let {\r\n        title,\r\n        buttonChildren, \r\n        popoverChildren\r\n    } = props;\r\n    \r\n    return (\r\n        <div ref={ref} className='rgt-columns-manager-wrapper'>\r\n            <button className={`rgt-columns-manager-button${isComponentVisible ? ' rgt-columns-manager-button-active' : ''}`} onClick={e => setIsComponentVisible(!isComponentVisible)}>\r\n                { buttonChildren }\r\n            </button>\r\n            <div className={`rgt-columns-manager-popover${isComponentVisible ? ' rgt-columns-manager-popover-open' : ''}`}>\r\n                <span className='rgt-columns-manager-popover-title'>{ title }</span>\r\n                <div className='rgt-columns-manager-popover-body'>\r\n                    { popoverChildren }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopoverButton;","import { useState, useEffect, useRef } from 'react';\r\n\r\nexport default function useDetectClickOutside(initialIsVisible) {\r\n\r\n    const [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible);\r\n    const ref = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClickOutside, true);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside, true);\r\n        };\r\n    });\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n            setIsComponentVisible(false);\r\n        }\r\n    };\r\n\r\n\r\n    return { ref, isComponentVisible, setIsComponentVisible };\r\n\r\n}","import React from 'react';\r\nimport { Cell } from './';\r\n\r\nconst Row = props => {\r\n\r\n    let {\r\n        index,\r\n        data,\r\n        tableManager,\r\n        measureRef\r\n    } = props;\r\n\r\n    let {\r\n        params: {\r\n            page,\r\n            isVirtualScrolling\r\n        },\r\n        handlers: {\r\n            getIsRowEditable,\r\n            getIsRowSelectable\r\n        },\r\n        rowsData: {\r\n            rowIdField,\r\n            pageItems,\r\n            selectedRowsIds,\r\n            updatedRow,\r\n        },\r\n        columnsData: {\r\n            visibleColumns\r\n        },\r\n        rowVirtualizer,\r\n    } = tableManager;\r\n\r\n    if (isVirtualScrolling) {\r\n        if (index === 'virtual-start') {\r\n            return visibleColumns.map((vc, colIndex) => <div key={index + colIndex} style={{ minHeight: rowVirtualizer.virtualItems[0]?.start }} />)\r\n        }\r\n        if (index === 'virtual-end') {\r\n            return visibleColumns.map((vc, colIndex) => <div key={index + colIndex} style={{ minHeight: rowVirtualizer.totalSize - rowVirtualizer.virtualItems[rowVirtualizer.virtualItems.length - 1]?.end || 0 }} />)\r\n        }\r\n    }\r\n\r\n    let rowId = data[rowIdField];\r\n    let disableSelection = !getIsRowSelectable(data);\r\n    let rowIndex = (index+1) + (pageItems.length * page - pageItems.length);\r\n    let isSelected = !!(selectedRowsIds.find(si => si === rowId));\r\n    let isEdit = updatedRow?.[rowIdField] === rowId && !!getIsRowEditable(data);\r\n\r\n    return visibleColumns.map((cd, colIndex) => {\r\n        return (\r\n            <Cell \r\n                key={rowIndex+colIndex}\r\n                rowId={rowId}\r\n                data={rowId && (updatedRow?.[rowIdField] === rowId) ? updatedRow : data} \r\n                rowIndex={rowIndex} \r\n                colIndex={colIndex}\r\n                column={cd}\r\n                isSelected={isSelected}\r\n                isEdit={isEdit}\r\n                disableSelection={disableSelection}\r\n                forwardRef={colIndex === 0 ? measureRef : undefined}\r\n                tableManager={tableManager}\r\n            />\r\n        )\r\n    })\r\n}\r\n\r\nexport default Row;","import React from 'react';\r\n\r\nconst Search = props => {\r\n\r\n    let {\r\n        value,\r\n        onChange,\r\n        tableManager,\r\n    } = props;\r\n\r\n    let {\r\n        params: {\r\n            textConfig\r\n        },\r\n        icons: {\r\n            search: searchIcon\r\n        },\r\n    } = tableManager;\r\n\r\n    return (\r\n        <div className='rgt-search-container'>\r\n            <label htmlFor=\"rgt-search\" className='rgt-search-label'>\r\n                <span className='rgt-search-icon'>{searchIcon}</span>\r\n                {textConfig.search}\r\n            </label>\r\n            <input\r\n                name=\"rgt-search\"\r\n                type=\"search\"\r\n                value={value}\r\n                onChange={e => onChange(e.target.value)}\r\n                className='rgt-search-input'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\n\r\nconst Information = props => {\r\n\r\n    let { \r\n        totalCount, \r\n        pageCount, \r\n        selectedCount,\r\n        tableManager\r\n    } = props;\r\n\r\n    let {\r\n        params: {\r\n            page,\r\n            tableHasSelection,\r\n            isPaginated,\r\n            textConfig\r\n        },\r\n        handlers: {\r\n            updateSelectedItems\r\n        },\r\n        icons: {\r\n            clearSelection: clearSelectionIcon\r\n        }\r\n    } = tableManager;\r\n\r\n    return (\r\n        <div className='rgt-footer-items-information-inner'>\r\n            { textConfig.totalRows } { totalCount } | { isPaginated ? `${textConfig.rows} ${pageCount * page - pageCount} - ${pageCount * page}` : ''} { tableHasSelection ? <React.Fragment>{`| ${selectedCount} ${textConfig.selected}`}{selectedCount ? <span className=\"rgt-footer-clear-selection-button rgt-clickable\" onClick={e => updateSelectedItems([])}>{ clearSelectionIcon }</span> : null}</React.Fragment> : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Information;","import React from 'react';\r\n\r\nconst PageSize = props => {\r\n\r\n    let { \r\n        value,\r\n        onChange,\r\n        options,\r\n        tableManager\r\n    } = props;\r\n\r\n    let {\r\n        params: {\r\n            textConfig\r\n        },\r\n    } = tableManager;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <span>{textConfig.rowsPerPage} </span>\r\n            <select \r\n                className='rgt-footer-items-per-page'\r\n                value={value} \r\n                onChange={e => { onChange(e.target.value);}}\r\n            >\r\n                { options.map((op, idx) => <option key={idx} value={op}>{op}</option>) }\r\n            </select>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PageSize;","import React from 'react';\r\n\r\nconst Pagination = props => {\r\n\r\n    let {\r\n        page, \r\n        onChange,\r\n        tableManager\r\n    } = props;\r\n\r\n    let {\r\n        params: {\r\n            textConfig,\r\n            totalPages\r\n        }\r\n    } = tableManager;\r\n\r\n    let backButtonDisabled = page-1 < 1;\r\n    let nextButtonDisabled = page+1 > totalPages;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <button \r\n                className={`rgt-footer-pagination-button${backButtonDisabled ? ' rgt-disabled-button' : ''}`}\r\n                disabled={page-1 < 1} \r\n                onClick={e => onChange(page-1)}\r\n            >{textConfig.prev}</button>\r\n\r\n            <div className='rgt-footer-pagination-container'>\r\n                <span>{textConfig.page} </span>\r\n                <input \r\n                    onClick={e => e.target.select()}\r\n                    className='rgt-footer-page-input'\r\n                    type='number' \r\n                    value={totalPages ? page : 0} \r\n                    onChange={e => onChange(e.target.value*1)}\r\n                />\r\n                <span>{textConfig.of} {totalPages}</span>\r\n            </div>\r\n\r\n            <button \r\n                className={`rgt-footer-pagination-button${nextButtonDisabled ? ' rgt-disabled-button' : ''}`}\r\n                disabled={page+1 > totalPages} \r\n                onClick={e => onChange(page+1)}\r\n            >{textConfig.next}</button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Pagination;","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import React from 'react';\r\nimport { SortableContainer } from 'react-sortable-hoc';\r\nimport { HeaderCell, Row } from './components/';\r\nimport { useTableManager } from './hooks/';\r\nimport PropTypes from 'prop-types';\r\nimport './index.css';\r\n\r\nconst SortableList = SortableContainer(({ style, className, children, forwardRef }) => <div ref={forwardRef} className={className} style={style}>{children}</div>);\r\n \r\nconst GridTable = (props) => {\r\n\r\n    const tableManager = useTableManager(props);\r\n\r\n    const {\r\n        refs: {\r\n            rgtRef,\r\n            tableRef\r\n        },\r\n        handlers: {\r\n            setColumns,\r\n            onColumnReorderStart,\r\n            onColumnReorderEnd\r\n        },\r\n        components: {\r\n            headerComponent: Header,\r\n            footerComponent: Footer,\r\n            loaderComponent: Loader,\r\n            noResultsComponent: NoResults\r\n        },\r\n        columnsData: {\r\n            columns,\r\n            visibleColumns\r\n        },\r\n        params: {\r\n            isVirtualScrolling\r\n        },\r\n        rowsData: {\r\n            pageItems\r\n        },\r\n        additionalProps,\r\n        icons,\r\n        rowVirtualizer\r\n    } = tableManager;\r\n\r\n    function handleColumnReorderStart(sortData) {\r\n        sortData.helper.classList.add('rgt-column-sort-ghost');\r\n        onColumnReorderStart?.(sortData);\r\n    }\r\n\r\n    function handleColumnReorderEnd(sortData) {\r\n        if(sortData.oldIndex === sortData.newIndex) return;\r\n\r\n        let colDefNewIndex = columns.findIndex(oc => oc.id === visibleColumns[sortData.newIndex].id);\r\n        let colDefOldIndex = columns.findIndex(oc => oc.id === visibleColumns[sortData.oldIndex].id);\r\n\r\n        let columnsClone = [...columns];\r\n        columnsClone.splice(colDefNewIndex, 0, ...columnsClone.splice(colDefOldIndex, 1));\r\n        \r\n        setColumns(columnsClone);\r\n        onColumnReorderEnd?.(sortData);\r\n    }\r\n\r\n    let { \r\n        isLoading,\r\n        dragHandleComponent,\r\n    } = props;\r\n\r\n    let rest = Object.keys(props).reduce((rest, key) => {\r\n        if (GridTable.propTypes[key] === undefined) rest = { ...rest, [key]: props[key] };\r\n        return rest;\r\n    }, {})\r\n\r\n    return (\r\n        <div ref={rgtRef} className='rgt-wrapper' {...rest} >\r\n            <Header tableManager={tableManager} />\r\n            <SortableList\r\n                forwardRef={tableRef}\r\n                className='rgt-container'\r\n                axis=\"x\"\r\n                lockToContainerEdges\r\n                distance={10}\r\n                lockAxis=\"x\"\r\n                useDragHandle={!!dragHandleComponent}\r\n                onSortStart={handleColumnReorderStart}\r\n                onSortEnd={handleColumnReorderEnd}\r\n                style={{\r\n                    display: 'grid',\r\n                    overflow: 'auto',\r\n                    flex: 1,\r\n                    gridTemplateColumns: (visibleColumns.map(g => g.width)).join(\" \"),\r\n                    gridTemplateRows: `repeat(${pageItems.length + 1 + (isVirtualScrolling ? 1 : 0)}, max-content)`,\r\n                }}\r\n            >\r\n                {\r\n                    visibleColumns.map((cd, idx) => (\r\n                        <HeaderCell key={idx} index={idx} column={cd} tableManager={tableManager}/>\r\n                    ))\r\n                }\r\n                {\r\n                    !isLoading && pageItems.length && visibleColumns.length > 1\r\n                        ?\r\n                        isVirtualScrolling\r\n                            ? \r\n                            [\r\n                                <Row key={'virtual-start'} index={'virtual-start'} tableManager={tableManager} />,\r\n                                ...rowVirtualizer.virtualItems.map(vr => <Row key={vr.index} index={vr.index} data={pageItems[vr.index]} measureRef={vr.measureRef} tableManager={tableManager} />),\r\n                                <Row key={'virtual-end'} index={'virtual-end'} tableManager={tableManager} />\r\n                            ]\r\n                            :\r\n                            pageItems.map((r, index) => <Row key={index} index={index} data={r} tableManager={tableManager} />)\r\n                        :\r\n                        <div className='rgt-no-data-container'>\r\n                            {\r\n                                isLoading\r\n                                    ?\r\n                                    <Loader tableManager={tableManager} />\r\n                                    :\r\n                                    <NoResults tableManager={tableManager} />\r\n                            }\r\n                        </div>\r\n                }\r\n            </SortableList>\r\n            <Footer tableManager={tableManager}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nGridTable.defaultProps = {\r\n    columns: [],\r\n    rows: [],\r\n    rowIdField: 'id',\r\n    minColumnWidth: 70,\r\n    pageSizes: [20, 50, 100],\r\n    isLoading: false,\r\n    showColumnVisibilityManager: true,\r\n    isHeaderSticky: true,\r\n    highlightSearch: true,\r\n    searchMinChars: 2,\r\n    isPaginated: true,\r\n    isVirtualScrolling: true,\r\n    showSearch: true,\r\n    showRowsInformation: true,\r\n    disableColumnsReorder: false,\r\n    getIsRowSelectable: row => true,\r\n    getIsRowEditable: row => true,\r\n};\r\n\r\nGridTable.propTypes = {\r\n    // general\r\n    columns: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    rows: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    rowIdField: PropTypes.string,\r\n    selectedRowsIds: PropTypes.array,\r\n    searchText: PropTypes.string,\r\n    getIsRowSelectable: PropTypes.func,\r\n    getIsRowEditable: PropTypes.func,\r\n    editRowId: PropTypes.any,\r\n    cellProps: PropTypes.object,\r\n    headerCellProps: PropTypes.object,\r\n    rowVirtualizerProps: PropTypes.object,\r\n    // table config\r\n    isPaginated: PropTypes.bool,\r\n    disableColumnsReorder: PropTypes.bool,\r\n    pageSizes: PropTypes.arrayOf(PropTypes.number),\r\n    pageSize: PropTypes.number,\r\n    sort: PropTypes.object,\r\n    minColumnWidth: PropTypes.number,\r\n    highlightSearch: PropTypes.bool,\r\n    showSearch: PropTypes.bool,\r\n    showRowsInformation: PropTypes.bool,\r\n    searchMinChars: PropTypes.number,\r\n    isLoading: PropTypes.bool,\r\n    isHeaderSticky: PropTypes.bool,\r\n    isVirtualScrolling: PropTypes.bool,\r\n    showColumnVisibilityManager: PropTypes.bool,\r\n    icons: PropTypes.object,\r\n    textConfig: PropTypes.object,\r\n    // events\r\n    onColumnsChange: PropTypes.func,\r\n    onSearchChange: PropTypes.func,\r\n    onSelectedRowsChange: PropTypes.func,\r\n    onSortChange: PropTypes.func,\r\n    onRowClick: PropTypes.func,\r\n    onRowEditIdChange: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onResize: PropTypes.func,\r\n    onResizeEnd: PropTypes.func,\r\n    onColumnReorderStart: PropTypes.func,\r\n    onColumnReorderEnd: PropTypes.func,\r\n    // custom components\r\n    headerComponent: PropTypes.func,\r\n    footerComponent: PropTypes.func,\r\n    loaderComponent: PropTypes.func,\r\n    noResultsComponent: PropTypes.func,\r\n    searchComponent: PropTypes.func,\r\n    columnVisibilityComponent: PropTypes.func,\r\n    informationComponent: PropTypes.func,\r\n    pageSizeComponent: PropTypes.func,\r\n    paginationComponent: PropTypes.func,\r\n    dragHandleComponent: PropTypes.func,\r\n};\r\n\r\nexport default GridTable;","import React from 'react';\r\n\r\nconst Username = ({tableManager, value, field, onChange, isEdit, data, column, rowIndex, searchText}) => {\r\n\r\n    return (\r\n        <div style={{position: 'relative', padding: '0 20px', display: 'flex', width: '100%', height: '100%', alignItems: 'center'}}>\r\n            {\r\n                isEdit ?\r\n                    <React.Fragment>\r\n                        <img src={data.avatar} alt=\"avatar\" />    \r\n                        <input\r\n                            autoFocus \r\n                            style={{position: 'absolute', height: 28, width: 'calc(100% - 82px)', top: 10, right: 20, bottom: 0, border: 'none', borderBottom: '1px solid #eee', outline: 'none', fontSize: 16, padding: 0, fontFamily: 'inherit'}} \r\n                            type=\"text\" \r\n                            value={value} \r\n                            onChange={e => onChange({...data, [field]: e.target.value})}\r\n                        />\r\n                    </React.Fragment>\r\n                    :\r\n                    <React.Fragment>\r\n                        <img src={data.avatar} alt=\"avatar\" />\r\n                        <span style={{marginLeft: 10, whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'}}>{value}</span>\r\n                    </React.Fragment>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Username;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport GridTable from '@nadavshaar/react-grid-table';\r\nimport '@nadavshaar/react-grid-table/dist/index.css';\r\n\r\nimport Username from \"./components/Username\";\r\nimport * as MOCK_DATA from \"./MOCK_DATA.json\";\r\nimport './index.css';\r\n\r\nconst EDIT_SVG = <svg height=\"16\" viewBox=\"0 0 20 20\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#fff\" stroke=\"#1856bf\" transform=\"translate(2 2)\"><path d=\"m8.24920737-.79402796c1.17157287 0 2.12132033.94974747 2.12132033 2.12132034v13.43502882l-2.12132033 3.5355339-2.08147546-3.495689-.03442539-13.47488064c-.00298547-1.16857977.94191541-2.11832105 2.11049518-2.12130651.00180188-.00000461.00360378-.00000691.00540567-.00000691z\" transform=\"matrix(.70710678 .70710678 -.70710678 .70710678 8.605553 -3.271644)\"/><path d=\"m13.5 4.5 1 1\"/></g></svg>;\r\nconst CANCEL_SVG = <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" stroke=\"#dc1e1e\" transform=\"translate(5 5)\"><path d=\"m.5 10.5 10-10\"/><path d=\"m10.5 10.5-10-10z\"/></g></svg>;\r\nconst SAVE_SVG = <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.5 5.5 3 3 8.028-8\" fill=\"none\" stroke=\"#4caf50\" transform=\"translate(5 6)\"/></svg>;\r\n\r\nconst styles = {\r\n\tselect: {margin: '0 20px'},\r\n\tbuttonsCellContainer: {padding: '0 20px', width: '100%', height: '100%', display: 'flex', justifyContent: 'flex-end', alignItems: 'center'},\r\n\teditButton: {background: '#f3f3f3', outline: 'none', cursor: 'pointer', padding: 4, display: 'inline-flex', border: 'none', borderRadius: '50%', boxShadow: '1px 1px 2px 0px rgb(0 0 0 / .3)'},\r\n\tbuttonsCellEditorContainer: {height: '100%', width: '100%', display: 'inline-flex', padding: '0 20px', justifyContent: 'flex-end', alignItems: 'center'},\r\n\tcancelButton: {background: '#f3f3f3', outline: 'none', cursor: 'pointer', marginRight: 10, padding: 2, display: 'inline-flex', border: 'none', borderRadius: '50%', boxShadow: '1px 1px 2px 0px rgb(0 0 0 / .3)'},\r\n\tsaveButton: {background: '#f3f3f3', outline: 'none', cursor: 'pointer', padding: 2, display: 'inline-flex', border: 'none', borderRadius: '50%', boxShadow: '1px 1px 2px 0px rgb(0 0 0 / .3)'}\r\n}\r\n\r\nconst Header = ({tableManager}) => {\r\n\r\n    const { params, handlers, columnsData } = tableManager;\r\n\r\n    const { searchText } = params;\r\n    const { handleSearchChange, toggleColumnVisibility } = handlers;\r\n    const { columns } = columnsData;\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'column', padding: '10px 20px', background: '#fff', width: '100%'}}>\r\n            <div>\r\n                <label htmlFor=\"my-search\" style={{fontWeight: 500, marginRight: 10}}>\r\n                    Search for:\r\n                </label>\r\n                <input \r\n                    name=\"my-search\"\r\n                    type=\"search\" \r\n                    value={searchText} \r\n                    onChange={e => handleSearchChange(e.target.value)} \r\n                    style={{width: 300}}\r\n                />\r\n            </div>\r\n            <div style={{display: 'flex', marginTop: 10}}>\r\n                <span style={{ marginRight: 10, fontWeight: 500 }}>Columns:</span>\r\n                {\r\n                    columns.map((cd, idx) => (\r\n                        <div key={idx} style={{flex: 1}}>\r\n                            <input \r\n                                id={`checkbox-${idx}`}\r\n                                type=\"checkbox\" \r\n                                onChange={ e => toggleColumnVisibility(cd.id) } \r\n                                checked={ cd.visible !== false } \r\n                            />\r\n                            <label htmlFor={`checkbox-${idx}`} style={{flex: 1, cursor: 'pointer'}}>\r\n                                {cd.label || cd.field}\r\n                            </label>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst App = () => {\r\n    \r\n    const [editRowId, setEditRowId] = useState(null);\r\n    const [rowsData, setRowsData] = useState([]);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [tableManager, setTableManager] = useState(null);\r\n    let [searchText, setSearchText] = useState();\r\n    let [selectedRowsIds, setSelectedRowsIds] = useState([]);\r\n    let [sort, setSort] = useState({ colId: 4, isAsc: true });\r\n    let [columns, setColumns] = useState([\r\n        {\r\n            id: 'checkbox',\r\n            pinned: true,\r\n            width: '54px',\r\n            label: 'Select'\r\n        },\r\n        {\r\n            id: 2,\r\n            field: 'username',\r\n            label: 'Username',\r\n            cellRenderer: Username,\r\n            editorCellRenderer: props => <Username {...props} isEdit />\r\n        },\r\n        {\r\n            id: 3,\r\n            field: 'first_name',\r\n            label: 'First Name'\r\n        },\r\n        {\r\n            id: 4,\r\n            field: 'last_name',\r\n            label: 'Last Name'\r\n        },\r\n        {\r\n            id: 5,\r\n            field: 'email',\r\n            label: 'Email'\r\n        },\r\n        {\r\n            id: 6,\r\n            field: 'gender',\r\n            label: 'Gender',\r\n            editorCellRenderer: ({ tableManager, value, field, onChange, data, column, rowIndex }) => (\r\n                <select\r\n                    style={styles.select}\r\n                    value={value}\r\n                    onChange={e => onChange({ ...data, [field]: e.target.value })}\r\n                >\r\n                    <option>Male</option>\r\n                    <option>Female</option>\r\n                </select>\r\n            )\r\n        },\r\n        {\r\n            id: 7,\r\n            field: 'ip_address',\r\n            label: 'IP Address'\r\n        },\r\n        {\r\n            id: 8,\r\n            field: 'last_visited',\r\n            label: 'Last Visited',\r\n            sort: ({ a, b, isAscending }) => {\r\n                let aa = a.split('/').reverse().join(),\r\n                    bb = b.split('/').reverse().join();\r\n                return aa < bb ? isAscending ? -1 : 1 : (aa > bb ? isAscending ? 1 : -1 : 0);\r\n            }\r\n        },\r\n        {\r\n            id: 9,\r\n            width: 'max-content',\r\n            pinned: true,\r\n            sortable: false,\r\n            resizable: true,\r\n            cellRenderer: ({ tableManager, value, data, column, rowIndex, searchText }) => (\r\n                <div style={styles.buttonsCellContainer}>\r\n                    <button\r\n                        title=\"Edit\"\r\n                        style={styles.editButton}\r\n                        onClick={e => tableManager.handlers.handleRowEditIdChange(data.id)}\r\n                    >\r\n                        {EDIT_SVG}\r\n                    </button>\r\n                </div>\r\n            ),\r\n            editorCellRenderer: ({ tableManager, value, field, onChange, data, column, rowIndex }) => (\r\n                <div style={styles.buttonsCellEditorContainer}>\r\n                    <button\r\n                        title=\"Cancel\"\r\n                        style={styles.cancelButton}\r\n                        onClick={e => tableManager.handlers.handleRowEditIdChange(null)}\r\n                    >\r\n                        {CANCEL_SVG}\r\n                    </button>\r\n                    <button\r\n                        title=\"Save\"\r\n                        style={styles.saveButton}\r\n                        onClick={e => {\r\n                            let rowsClone = [...tableManager.rowsData.items];\r\n                            let updatedRowIndex = rowsClone.findIndex(r => r.id === data.id);\r\n                            rowsClone[updatedRowIndex] = data;\r\n\r\n                            setRowsData(rowsClone);\r\n                            tableManager.handlers.handleRowEditIdChange(null);\r\n                        }}\r\n                    >\r\n                        {SAVE_SVG}\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    ]);\r\n\t\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            setRowsData(MOCK_DATA.default)\r\n            setLoading(false);\r\n        }, 1500);\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <GridTable\r\n            columns={columns}\r\n            rows={rowsData}\r\n            isLoading={isLoading}\r\n            editRowId={editRowId}\r\n            onRowEditIdChange={setEditRowId}\r\n            selectedRowsIds={selectedRowsIds}\r\n            onSelectedRowsChange={setSelectedRowsIds}\r\n            style={{ boxShadow: 'rgb(0 0 0 / 30%) 0px 40px 40px -20px' }}\r\n            onLoad={setTableManager}\r\n            searchText={searchText}\r\n            onSearchChange={setSearchText}\r\n            // showRowsInformation={false}\r\n            // sort={sort}\r\n            onSortChange={setSort}\r\n            // isVirtualScrolling={true}\r\n            // searchComponent={Search}\r\n            // isVirtualScrolling={false}\r\n            // headerComponent={Header}\r\n        />\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}