{"version":3,"sources":["../../src/tableManager.js","../../src/components/HeaderCell.jsx","../../src/hooks/useResizeEvents.jsx","../../src/components/Cell.jsx","../../src/components/PopoverButton.jsx","../../src/hooks/useDetectClickOutside.jsx","../../src/components/Header.jsx","../../src/components/Footer.jsx","../../node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/object-assign/index.js","../../node_modules/react-is/cjs/react-is.development.js","../../node_modules/react-is/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/checkPropTypes.js","../../node_modules/prop-types/factoryWithTypeCheckers.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../src/index.js","components/Username.jsx","App.js","index.js"],"names":["lastPos","SortableItem","SortableElement","className","data-column-id","key","index","DragHandle","SortableHandle","HeaderCell","props","rest","resizeHandleRef","useRef","selectAllRef","useState","target","column","sortCallback","sortEndCallback","useEffect","window","onResize","e","handleResize","removeResizeListeners","useResizeEvents","setTarget","sortingProps","onClick","handleSort","minWidth","maxWidth","isPinnedRight","disabled","disableColumnsReorder","columnId","collection","isPinnedLeft","dragHandleRenderer","isChecked","callback","selectAllIsDisabled","ref","type","onChange","checked","selectAllIsChecked","label","sortBy","sortAsc","sortIcons","Cell","rowEvents","onMouseEnter","document","c","onMouseLeave","event","onRowClick","dataAttributes","rowId","rowIndex","virtualCell","tableManager","id","onSelectedItemsChange","lastColIsPinned","colIndex","visibleColumns","disableSelection","renderCheckboxCell","isInputFocused","colDefs","editorCellRenderer","field","tabIndex","autoFocus","value","setRow","cellRenderer","searchText","generateColumns","minColumnWidth","columns","isPinnedColumn","idx","cd","isVisibleColumn","width","resizable","pinned","visible","getValue","setValue","searchable","editable","sortable","search","sort","isAscending","aa","a","bb","b","getNormalizedItems","searchMinChars","items","conf","coldef","conf2","item","Object","displayValue","aVal","bVal","totalPages","Math","isPaginated","pageSize","setItems","setTotalPages","containerEl","tableRef","gridTemplateColumns","currentColWidth","diff","colMinWidth","gtcArr","newGridTemplateColumns","handleResizeEnd","setColumns","col","handleColumnSortStart","obj","handleColumnSortEnd","setTimeout","sortObj","colDefNewIndex","oc","colDefOldIndex","sortByState","setSortBy","setSortAsc","onSortChange","colId","handlePagination","goToPage","setPage","listEl","toggleSelectAll","rowIdField","selectedIds","si","selectableItems","s","toggleItemSelection","itemIndex","selectedItems","handleColumnVisibility","PopoverButton","initialIsVisible","handleClickOutside","setIsComponentVisible","useDetectClickOutside","popoverChildren","isComponentVisible","DEFAULT_MENU_ICON","xmlns","height","viewBox","d","Header","setSearchText","showSearch","searchRenderer","htmlFor","name","manageColumnVisibility","columnVisibilityRenderer","setColumnVisibility","setColDefs","buttonChildren","TRASH_ICON","fill","fillRule","stroke","strokeLinecap","strokeLinejoin","transform","Footer","setSelectedItems","backButtonDisabled","page","nextButtonDisabled","footerRenderer","totalRows","numberOfRows","tableHasSelection","selectedRowsLength","setPageSize","pageSizes","op","Symbol","for","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","u","$$typeof","A","getOwnPropertySymbols","module","require$$0","prototype","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","TypeError","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","join","test3","split","forEach","letter","keys","err","shouldUseNative","checkPropTypes","typeSpecs","values","location","componentName","getStack","resetWarningCache","Function","call","bind","emptyFunction","emptyFunctionWithReset","shim","propName","propFullName","secret","ReactPropTypesSecret","Error","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","PropTypes","require$$2","DEFAULT_LOADER","strokeWidth","strokeOpacity","cx","cy","attributeName","from","to","dur","repeatCount","SortableList","SortableContainer","children","style","GridTable","TM","rgtRef","it","virtualColConfig","visibleColumnsWithVirtual","isSelectAllIndeterminate","cols","setCols","setUpdatedRow","setListEl","el","updateSelectedItems","newSelectedItems","searchTextState","helperContainer","axis","lockToContainerEdges","distance","lockAxis","useDragHandle","onSortStart","onSortEnd","display","overflow","gridTemplateRows","isVirtual","stickyHeader","arr","renderHeaderCells","isLoading","idx1","cellValue","updatedRow","re","RegExp","restArr","restItemsLength","handleSearchHighlight","classNames","idx2","totalItems","rows","isHeaderSticky","highlightSearch","sortAscending","isRowSelectable","row","isRowEditable","icons","ascending","descending","selectedRowsIds","editRowId","cellProps","headerCellProps","onColumnsChange","onSearchChange","onSelectedRowsChange","headerRenderer","loaderRenderer","noResultsRenderer","Username","isEdit","columnData","position","padding","alignItems","Fragment","src","avatar","alt","top","right","bottom","border","borderBottom","outline","fontSize","fontFamily","marginLeft","whiteSpace","textOverflow","EDIT_SVG","CANCEL_SVG","SAVE_SVG","styles","select","margin","buttonsCellContainer","justifyContent","editButton","background","cursor","borderRadius","boxShadow","buttonsCellEditorContainer","cancelButton","marginRight","saveButton","App","setEditRowId","rowsData","setRowsData","setLoading","MOCK_DATA","reverse","title","rowsClone","updatedRowIndex","findIndex","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fedf1f07.chunk.js","sourcesContent":["var lastPos;\r\n\r\nconst tableManager = () => {\r\n    return {\r\n        generateColumns: ({columns, minColumnWidth}) => {\r\n            return columns.map((cd, idx) => { \r\n    \r\n                let isPinnedColumn =  idx === 0 && cd.pinned || idx === columns.length-1 && cd.pinned;\r\n                let isVisibleColumn =  isPinnedColumn || cd.visible !== false;\r\n                \r\n                if(cd.id === 'checkbox') return {\r\n                    className: '',\r\n                    width: 'max-content',\r\n                    minWidth: 0,\r\n                    maxWidth: null,\r\n                    resizable: false,\r\n                    ...cd,\r\n                    pinned: isPinnedColumn,\r\n                    visible: isVisibleColumn\r\n                };\r\n                \r\n                return {\r\n                    label: cd.field,\r\n                    className: '',\r\n                    width: 'max-content',\r\n                    minWidth: cd.minWidth || minColumnWidth,\r\n                    maxWidth: null,\r\n                    getValue: ({value, column}) => value, \r\n                    setValue: ({value, row, setRow, column}) => { setRow({...row, [column.field]: value}) },\r\n                    searchable: true,\r\n                    editable: true,\r\n                    sortable: true,\r\n                    resizable: true,\r\n                    search: ({value, searchText}) => value.toString().toLowerCase().includes(searchText.toLowerCase()), \r\n                    sort: ({a, b, isAscending}) => {\r\n                        let aa = typeof a === 'string' ? a.toLowerCase() : a;\r\n                        let bb = typeof b === 'string' ? b.toLowerCase() : b;\r\n                        if(aa > bb) return isAscending ? 1 : -1;\r\n                        else if(aa < bb) return isAscending ? -1 : 1;\r\n                        return 0;\r\n                    }, \r\n                    ...cd, \r\n                    pinned: isPinnedColumn,\r\n                    visible: isVisibleColumn\r\n                }\r\n            });\r\n        },\r\n        getNormalizedItems: ({columns, items, searchText, isPaginated, page, pageSize, sortBy, sortAsc, setItems, setTotalPages, searchMinChars}) => {\r\n            items = [...items];\r\n    \r\n            var conf = columns.reduce((conf, coldef) => {\r\n                conf[coldef.field] = coldef;\r\n                return conf;\r\n            }, {})\r\n            var conf2 = columns.reduce((conf, coldef) => {\r\n                conf[coldef.id] = coldef;\r\n                return conf;\r\n            }, {})\r\n    \r\n            if(searchText.length >= searchMinChars) {\r\n                items = items.filter(item => Object.keys(item).some(key => {\r\n                    if (conf[key] && conf[key].searchable !== false) {\r\n                        let displayValue = conf[key].getValue({value: item[key], column: conf[key]});\r\n                        return conf[key].search({value: displayValue.toString(), searchText});\r\n                    }\r\n                    return false;\r\n                }));\r\n            }\r\n    \r\n            // sort\r\n            if(sortBy){\r\n                items.sort((a, b) => {\r\n                    let aVal = conf2[sortBy].getValue({value: a[conf2[sortBy].field], column: conf2[sortBy]});\r\n                    let bVal = conf2[sortBy].getValue({value: b[conf2[sortBy].field], column: conf2[sortBy]});\r\n                    \r\n                    if(conf2[sortBy].sortable === false) return 0;\r\n                    return conf2[sortBy].sort({a: aVal, b: bVal, isAscending: sortAsc});\r\n                });\r\n            }\r\n    \r\n            // paginate\r\n            let totalPages = (items.length % pageSize > 0) ? Math.trunc(items.length / pageSize) + 1 : Math.trunc(items.length / pageSize);\r\n    \r\n            if (isPaginated !== false) items = items.slice((pageSize * page - pageSize), (pageSize * page));\r\n            \r\n            setItems(items);\r\n            setTotalPages(totalPages);\r\n        },\r\n        handleResize: ({e, target, column, tableRef, visibleColumns}) => {\r\n            let containerEl = tableRef.current.container;\r\n            let gridTemplateColumns = containerEl.style.gridTemplateColumns;\r\n            let currentColWidth = target.offsetParent.clientWidth;\r\n            if(!lastPos) lastPos = e.clientX;\r\n            \r\n            let diff = lastPos - e.clientX;\r\n            \r\n            let colIndex = visibleColumns.findIndex(cd => cd.id === column.id);\r\n            let colMinWidth = visibleColumns[colIndex].minWidth;\r\n            if(e.clientX > lastPos || e.clientX < lastPos && currentColWidth - diff > colMinWidth) {\r\n                let gtcArr = gridTemplateColumns.split(\" \");\r\n                \r\n                if((column.minWidth && ((currentColWidth - diff) <= column.minWidth)) || (column.maxWidth && ((currentColWidth - diff) >= column.maxWidth))) return;\r\n    \r\n                gtcArr[colIndex] = `${currentColWidth - diff}px`;\r\n                let newGridTemplateColumns = gtcArr.join(\" \");\r\n    \r\n                containerEl.style.gridTemplateColumns = newGridTemplateColumns;\r\n            }\r\n            \r\n            lastPos = e.clientX;\r\n        },\r\n        handleResizeEnd: ({tableRef, columns, setColumns}) => {\r\n            lastPos = null;\r\n            let containerEl = tableRef.current.container;\r\n            let gridTemplateColumns = containerEl.style.gridTemplateColumns;\r\n            gridTemplateColumns = gridTemplateColumns.split(\" \");\r\n            \r\n            columns = columns.map((cd, idx) => { return {...cd, width: gridTemplateColumns[idx]} }).filter(col => col.id !== 'virtual');\r\n            setColumns(columns);\r\n        },\r\n        handleColumnSortStart: (obj, e) => {\r\n            obj.helper.classList.add('rgt-column-sort-ghost');\r\n            tableManager.isColumnSorting = true;\r\n        },\r\n        handleColumnSortEnd: ({sortObj, visibleColumns, columns, setColumns}) => {\r\n            setTimeout(() => { tableManager.isColumnSorting = false }, 0);\r\n            if(sortObj.oldIndex === sortObj.newIndex) return;\r\n    \r\n            let colDefNewIndex = columns.findIndex(oc => oc.id === visibleColumns[sortObj.newIndex].id);\r\n            let colDefOldIndex = columns.findIndex(oc => oc.id === visibleColumns[sortObj.oldIndex].id);\r\n    \r\n            columns = [...columns];\r\n            columns.splice(colDefNewIndex, 0, ...columns.splice(colDefOldIndex, 1));\r\n            \r\n            setColumns(columns);\r\n        },\r\n        handleSort: ({colId, onSortChange, setSortBy, setSortAsc, sortByState, sortAsc}) => {\r\n            if(tableManager.isColumnSorting) return;\r\n            \r\n            if(sortByState !== colId) {\r\n                setSortBy(colId);\r\n                setSortAsc(true);\r\n                if(onSortChange) onSortChange(colId, true);\r\n                return;\r\n            }\r\n            let sort = sortAsc ? false : sortAsc === false ? null : true;\r\n            if(sort === null) setSortBy(null);\r\n            if(onSortChange) onSortChange(colId, sort);\r\n            setSortAsc(sort);\r\n        },\r\n        handlePagination: ({goToPage, listEl, totalPages, setPage, selectedItems, onSelectedItemsChange}) => {\r\n            if((goToPage >= 1) && (goToPage <= totalPages)) {\r\n                setPage(goToPage);\r\n                // if(selectedItems.length) {\r\n                //     onSelectedItemsChange([]);\r\n                // }\r\n                setTimeout(() => { listEl.scrollTop = 0 }, 0);\r\n            };\r\n        },\r\n        toggleSelectAll: ({selectAllIsChecked, selectedItems, selectableItems, onSelectedItemsChange, isSelectAllIndeterminate, rowIdField}) => {\r\n            let selectedIds = [...selectedItems];\r\n\r\n            if(selectAllIsChecked || isSelectAllIndeterminate) selectedIds = selectedIds.filter(si => !selectableItems.find(item => si === item.id));\r\n            if (!selectAllIsChecked && !isSelectAllIndeterminate) selectableItems.forEach(s => selectedIds.push(s[rowIdField]));\r\n            \r\n            onSelectedItemsChange(selectedIds);\r\n        },\r\n        toggleItemSelection: ({id, selectedItems, onSelectedItemsChange}) => {\r\n            selectedItems = [...selectedItems];\r\n    \r\n            let itemIndex = selectedItems.findIndex(s => s === id);\r\n    \r\n            if(itemIndex !== -1) selectedItems.splice(itemIndex, 1);\r\n            else selectedItems.push(id);\r\n    \r\n            onSelectedItemsChange(selectedItems);\r\n        },\r\n        handleColumnVisibility: ({colId, columns, setColumns}) => {\r\n            columns = [...columns];\r\n            let colIndex = columns.findIndex(cd => cd.id === colId);\r\n    \r\n            columns[colIndex].visible = !columns[colIndex].visible;\r\n            setColumns(columns);\r\n        }\r\n    }\r\n}\r\n\r\nexport default tableManager;","import React, { useRef, useEffect, useState } from 'react';\r\nimport {SortableElement, SortableHandle} from 'react-sortable-hoc';\r\nimport useResizeEvents from '../hooks/useResizeEvents';\r\n\r\nconst SortableItem = SortableElement(({children, index, columnId, className}) => <div className={className} data-column-id={columnId} key={index}>{children}</div>);\r\nconst DragHandle = SortableHandle(({children, index}) => <React.Fragment>{children}</React.Fragment>);\r\n\r\nconst HeaderCell = (props) => {\r\n\r\n    let {\r\n        index, \r\n        column,\r\n        className,\r\n        sortBy,\r\n        sortAsc,\r\n        handleSort,\r\n        selectAllIsChecked,\r\n        toggleSelectAll,\r\n        selectAllIsDisabled,\r\n        isPinnedLeft,\r\n        isPinnedRight,\r\n        sortIcons,\r\n        dragHandleRenderer,\r\n        stickyHeader,\r\n        handleResizeEnd,\r\n        handleResize,\r\n        disableColumnsReorder,\r\n        isSelectAllIndeterminate,\r\n        ...rest\r\n    } = props;\r\n    \r\n    let resizeHandleRef = useRef(null);\r\n    let selectAllRef = useRef(null);\r\n    const [target, setTarget] = useState(resizeHandleRef?.current || null);\r\n    useResizeEvents(target, column, handleResize, handleResizeEnd);\r\n\r\n    useEffect(() => {\r\n        setTarget(resizeHandleRef.current);\r\n    }, [column])\r\n    \r\n    useEffect(() => {\r\n        if(!selectAllRef.current) return;\r\n\r\n        if(isSelectAllIndeterminate) selectAllRef.current.indeterminate = true;\r\n        else selectAllRef.current.indeterminate = false;\r\n    }, [isSelectAllIndeterminate])\r\n\r\n    let sortingProps = (column.sortable !== false && column.id  !== 'checkbox' && !column.isVirtual) ? {onClick: e => handleSort(column.id)} : {};\r\n\r\n    return (\r\n        <div \r\n            data-column-id={(column.id).toString()}\r\n            id={`rgt-column-${column.isVirtual ? 'virtual' : column.id === 'checkbox' ? 'checkbox' : column.field.toLowerCase()}`}\r\n            style={{minWidth: column.minWidth, maxWidth: column.maxWidth}}\r\n            className={className}\r\n            {...sortingProps}\r\n            { ...rest }\r\n        >\r\n            {\r\n                (!column.isVirtual) ?\r\n                    <React.Fragment>\r\n                        <SortableItem \r\n                            className={`rgt-cell-header-inner${column.id === 'checkbox' ? ' rgt-cell-header-inner-checkbox-column' : ''}${!isPinnedRight ? ' rgt-cell-header-inner-not-pinned-right' : '' }`}\r\n                            index={index} \r\n                            disabled={disableColumnsReorder || isPinnedLeft || isPinnedRight}\r\n                            columnId={(column.id).toString()}\r\n                            collection={isPinnedLeft || isPinnedRight ? 0 : 1}\r\n                        >\r\n                            {\r\n                                dragHandleRenderer ?\r\n                                    <DragHandle index={index}>{dragHandleRenderer()}</DragHandle>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            {\r\n                                (column.id === 'checkbox') ?\r\n                                    <div className=\"rgt-header-checkbox-cell\">\r\n                                        {\r\n                                            column.headerCellRenderer ?\r\n                                                column.headerCellRenderer({isChecked: selectAllIsChecked, callback: toggleSelectAll, disabled: selectAllIsDisabled})\r\n                                                :\r\n                                                <input \r\n                                                    ref={selectAllRef}\r\n                                                    className={selectAllIsDisabled ? 'rgt-disabled' : 'rgt-clickable'}\r\n                                                    disabled={selectAllIsDisabled}\r\n                                                    type=\"checkbox\" \r\n                                                    onChange={toggleSelectAll} \r\n                                                    checked={selectAllIsChecked} \r\n                                                />\r\n                                        }\r\n                                    </div>\r\n                                    :\r\n                                    column.headerCellRenderer ? \r\n                                        column.headerCellRenderer({label: (typeof column.label === 'string' ? column.label : column.field), column: column})\r\n                                        :\r\n                                        <span className='rgt-text-truncate' data-column-id={(column.id).toString()}>\r\n                                            {typeof column.label === 'string' ? column.label : column.field}\r\n                                        </span>\r\n                            }\r\n                            {\r\n                                (sortBy === column.id) ? \r\n                                    sortAsc ? \r\n                                        <span className='rgt-sort-icon rgt-sort-icon-ascending'>{sortIcons && sortIcons.ascending}</span> \r\n                                        :\r\n                                        sortAsc === false ?\r\n                                            <span className='rgt-sort-icon rgt-sort-icon-descending'>{sortIcons && sortIcons.descending}</span> \r\n                                            : \r\n                                            null\r\n                                    : \r\n                                    null\r\n                            }\r\n                        </SortableItem>\r\n                        {\r\n                            column.resizable !== false ?\r\n                                <span \r\n                                    ref={resizeHandleRef} \r\n                                    className='rgt-resize-handle'\r\n                                    onClick={e => {e.preventDefault(); e.stopPropagation();}}\r\n                                >\r\n                                </span>\r\n                                : null\r\n                        }\r\n                    </React.Fragment>\r\n                :\r\n                null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderCell;","import {useEffect} from 'react';\r\n\r\nconst useResizeEvents = (target, column, sortCallback, sortEndCallback) => {\r\n\r\n    useEffect(() => {\r\n        if(target) target.addEventListener('mousedown', onResize);\r\n\r\n        return () => {\r\n            if(target) target.removeEventListener('mousedown', onResize)\r\n            window.removeEventListener('mousemove', handleResize);\r\n            window.removeEventListener('mouseup', removeResizeListeners);\r\n        }\r\n    }, [target, column, sortCallback, sortEndCallback])\r\n\r\n    const onResize = (e) => {\r\n        e.stopPropagation()\r\n        window.addEventListener('mousemove', handleResize);\r\n        window.addEventListener('mouseup', removeResizeListeners);\r\n    }\r\n\r\n    const handleResize = (e) => {\r\n        sortCallback({e, target, column});\r\n    }\r\n    \r\n    const removeResizeListeners = (e) => {\r\n        sortEndCallback();\r\n        window.removeEventListener('mousemove', handleResize);\r\n        window.removeEventListener('mouseup', removeResizeListeners);\r\n    }\r\n}\r\n\r\nexport default useResizeEvents;","import React from 'react';\r\n\r\nconst Cell = (props) => {\r\n\r\n    let {\r\n        row,\r\n        rowId,\r\n        rows,\r\n        column,\r\n        className,\r\n        cellRenderer,\r\n        editorCellRenderer,\r\n        rowIndex,\r\n        value,\r\n        searchText,\r\n        isEdit,\r\n        setUpdatedRow,\r\n        colIndex,\r\n        colDefs,\r\n        disableSelection,\r\n        selectedItems,\r\n        onSelectedItemsChange,\r\n        page,\r\n        onRowClick,\r\n        isChecked,\r\n        lastColIsPinned,\r\n        visibleColumns,\r\n        tableManager,\r\n        ...rest\r\n    } = props;\r\n\r\n    let rowEvents = {\r\n        onMouseEnter: e => document.querySelectorAll(`.rgt-row-${rowIndex}`).forEach(c => c.classList.add('rgt-row-hover')),\r\n        onMouseLeave: e => document.querySelectorAll(`.rgt-row-${rowIndex}`).forEach(c => c.classList.remove('rgt-row-hover'))\r\n    }\r\n    if(onRowClick) rowEvents.onClick = event => onRowClick({rowIndex, row, column, event});\r\n\r\n    let dataAttributes = {\"data-row-id\": (rowId).toString(), \"data-row-index\": rowIndex.toString(), \"data-column-id\": (column.id).toString()};\r\n\r\n    let virtualCell = <div { ...dataAttributes } className={className} { ...rowEvents } {...rest}></div>;\r\n\r\n    const renderCheckboxCell = () => {\r\n        let callback = e => tableManager.toggleItemSelection({id: rowId, selectedItems, onSelectedItemsChange});\r\n    \r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    lastColIsPinned && colIndex === visibleColumns.length-1 ?\r\n                        virtualCell\r\n                        : null\r\n                }\r\n                <div \r\n                    className={className} \r\n                    { ...dataAttributes }\r\n                    { ...rowEvents }\r\n                    { ...rest }\r\n                >\r\n                    {\r\n                        (column.cellRenderer) ? \r\n                            column.cellRenderer({isChecked, callback, disabled: disableSelection, rowIndex})\r\n                            :\r\n                            <input \r\n                                className={disableSelection ? 'rgt-disabled' : 'rgt-clickable'}\r\n                                type=\"checkbox\" \r\n                                onChange={ callback } \r\n                                onClick={ e => e.stopPropagation() } \r\n                                checked={ isChecked } \r\n                                disabled={ disableSelection }\r\n                            />\r\n                    }\r\n                </div>\r\n                {\r\n                    !lastColIsPinned && colIndex === visibleColumns.length-1 ?\r\n                        virtualCell\r\n                        : null\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    if(column.id === 'checkbox') return renderCheckboxCell();\r\n\r\n    let isInputFocused = colIndex === colDefs.findIndex(column => column.id !== 'checkbox' && column.editable !== false);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                lastColIsPinned && colIndex === visibleColumns.length-1 ?\r\n                    virtualCell\r\n                    : null\r\n            }\r\n            <div \r\n                className={className} \r\n                style={{minWidth: column.minWidth, maxWidth: column.maxWidth}}\r\n                { ...dataAttributes }\r\n                { ...rowEvents }\r\n                { ...rest }\r\n            >\r\n                {\r\n                    column.editable !== false && isEdit ?\r\n                        editorCellRenderer ? \r\n                            editorCellRenderer({value, field: column.field, onChange: setUpdatedRow, row, rows, column, rowIndex})\r\n                            :\r\n                            <div className='rgt-cell-inner rgt-cell-editor'>\r\n                                {\r\n                                    <div className='rgt-cell-editor-inner'>\r\n                                        <input\r\n                                            tabIndex={0}\r\n                                            autoFocus={isInputFocused}\r\n                                            className='rgt-cell-editor-input' \r\n                                            type=\"text\" \r\n                                            value={value} \r\n                                            onChange={e => column.setValue({value: e.target.value, row, setRow: setUpdatedRow, column})} \r\n                                        />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                    :\r\n                    cellRenderer ? \r\n                        cellRenderer({value, row, column, rowIndex, searchText})\r\n                        :\r\n                        <div className='rgt-cell-inner'>{value}</div>\r\n                }\r\n            </div>\r\n            {\r\n                !lastColIsPinned && colIndex === visibleColumns.length-1 ?\r\n                    virtualCell\r\n                    : null\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Cell;","import React from 'react';\r\nimport useDetectClickOutside from '../hooks/useDetectClickOutside';\r\n\r\nconst PopoverButton = props => {\r\n\r\n    const { ref, isComponentVisible, setIsComponentVisible } = useDetectClickOutside(false);\r\n\r\n    let {\r\n        buttonChildren, \r\n        popoverChildren\r\n    } = props;\r\n    \r\n    return (\r\n        <div ref={ref} className='rgt-columns-manager-wrapper'>\r\n            <button className='rgt-columns-manager-button' onClick={e => setIsComponentVisible(!isComponentVisible)}>\r\n                { buttonChildren }\r\n            </button>\r\n            <div className={`rgt-columns-manager-popover${isComponentVisible ? ' rgt-columns-manager-popover-open' : ''}`}>\r\n                <span className='rgt-columns-manager-popover-row rgt-columns-manager-popover-title'>Column Visibility</span>\r\n                <div className='rgt-columns-manager-popover-body'>\r\n                    { popoverChildren }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopoverButton;","import { useState, useEffect, useRef } from 'react';\r\n\r\nexport default function useDetectClickOutside(initialIsVisible) {\r\n\r\n    const [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible);\r\n    const ref = useRef(null);\r\n    \r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClickOutside, true);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside, true);\r\n        };\r\n    });\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n            setIsComponentVisible(false);\r\n        }\r\n    };\r\n\r\n\r\n    return { ref, isComponentVisible, setIsComponentVisible };\r\n\r\n}","import React from 'react';\r\nimport tableManager from '../tableManager';\r\nimport PopoverButton from './PopoverButton';\r\n\r\nconst DEFAULT_MENU_ICON = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\r\n    <path d=\"M12 18c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3z\"/>\r\n</svg>;\r\n\r\nconst Header = (props) => {\r\n\r\n    let { \r\n        showSearch,\r\n        manageColumnVisibility,\r\n        columnVisibilityRenderer,\r\n        colDefs,\r\n        setColDefs,\r\n        searchRenderer,\r\n        searchTextState,\r\n        setSearchText\r\n    } = props;\r\n\r\n    const renderSearch = () => (\r\n        <div className='rgt-search-container'>\r\n            {\r\n                searchRenderer ?\r\n                    searchRenderer({searchText: searchTextState, setSearchText})\r\n                    :\r\n                    <React.Fragment>\r\n                        <label htmlFor=\"rgt-search\" className='rgt-search-label'>\r\n                            <span className='rgt-search-icon'>&#9906;</span>\r\n                            Search:\r\n                        </label>\r\n                        <input \r\n                            name=\"rgt-search\"\r\n                            type=\"search\" \r\n                            value={searchTextState} \r\n                            onChange={e => setSearchText(e.target.value)} \r\n                            className='rgt-search-input'\r\n                        />\r\n                    </React.Fragment>\r\n            }\r\n        </div>\r\n    )\r\n\r\n    const renderColumnVisibilityManager = () => {\r\n        return (\r\n            <PopoverButton \r\n                buttonChildren={ DEFAULT_MENU_ICON }\r\n                popoverChildren={\r\n                    colDefs.map((cd, idx) => {\r\n                        if(cd.pinned && idx === 0 || cd.pinned && idx === colDefs.length-1) return null;\r\n                        return (\r\n                            <div key={idx} className='rgt-columns-manager-popover-row'>\r\n                                <label htmlFor={`checkbox-${idx}`} className='rgt-clickable rgt-flex-child rgt-text-truncate'>{cd.label || cd.field || cd.id}</label>\r\n                                <input \r\n                                    id={`checkbox-${idx}`}\r\n                                    className='rgt-clickable'\r\n                                    type=\"checkbox\" \r\n                                    onChange={ e => tableManager.handleColumnVisibility({colId: cd.id, columns: colDefs, setColumns: setColDefs}) } \r\n                                    checked={ cd.visible !== false } \r\n                                />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='rgt-header-container'>\r\n            {\r\n                showSearch !== false ?\r\n                    renderSearch()\r\n                    :\r\n                    <span></span>\r\n            }\r\n            {\r\n                manageColumnVisibility !== false ?\r\n                    columnVisibilityRenderer ?\r\n                        columnVisibilityRenderer({columns: colDefs, setColumnVisibility: colId => tableManager.handleColumnVisibility({colId, columns: colDefs, setColumns: setColDefs})})\r\n                        :\r\n                        renderColumnVisibilityManager()\r\n                    :\r\n                    <span></span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst TRASH_ICON = <svg height=\"16\" viewBox=\"0 0 21 21\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g fill=\"none\" fillRule=\"evenodd\" stroke=\"#2a2e3b\" strokeLinecap=\"round\" strokeLinejoin=\"round\" transform=\"translate(3 2)\">\r\n        <path d=\"m2.5 2.5h10v12c0 1.1045695-.8954305 2-2 2h-6c-1.1045695 0-2-.8954305-2-2zm5-2c1.1045695 0 2 .8954305 2 2h-4c0-1.1045695.8954305-2 2-2z\"/>\r\n        <path d=\"m.5 2.5h14\"/>\r\n        <path d=\"m5.5 5.5v8\"/>\r\n        <path d=\"m9.5 5.5v8\"/>\r\n    </g>\r\n</svg>;\r\n\r\nconst Footer = (props) => {\r\n\r\n    let { \r\n        totalPages, \r\n        page, \r\n        pageSize, \r\n        handlePagination, \r\n        setPageSize, \r\n        pageSizes, \r\n        footerRenderer,\r\n        selectedRowsLength,\r\n        numberOfRows,\r\n        totalItems,\r\n        tableHasSelection,\r\n        isPaginated,\r\n        setSelectedItems,\r\n    } = props;\r\n\r\n    let backButtonDisabled = page-1 < 1;\r\n    let nextButtonDisabled = page+1 > totalPages;\r\n\r\n    const renderSelectedItems = () => {\r\n    return <span className='rgt-footer-items-information'>Total Rows: {totalItems} | {isPaginated ? `Rows: ${numberOfRows * page - numberOfRows} - ${numberOfRows * page}` : ''} { tableHasSelection ? <React.Fragment>{`| ${selectedRowsLength} Selected`}{selectedRowsLength ? <span className=\"rgt-footer-clear-selection-button rgt-clickable\" onClick={e => setSelectedItems([])}>{TRASH_ICON}</span> : null}</React.Fragment> : ''}</span>;\r\n    }\r\n\r\n    const renderPageSize = () => {\r\n        return <React.Fragment>\r\n                <span>Items per page: </span>\r\n                <select \r\n                    className='rgt-footer-items-per-page'\r\n                    value={pageSize} \r\n                    onChange={e => {setPageSize(e.target.value); handlePagination(1)}}\r\n                >\r\n                    { pageSizes.map((op, idx) => <option key={idx} value={op}>{op}</option>) }\r\n                </select>\r\n            </React.Fragment>\r\n    }\r\n\r\n    const renderPagination = () => {\r\n        return <React.Fragment>\r\n                <button \r\n                    className={`rgt-footer-pagination-button${backButtonDisabled ? ' rgt-disabled-button' : ''}`}\r\n                    disabled={page-1 < 1} \r\n                    onClick={e => handlePagination(page-1)}\r\n                >Prev</button>\r\n\r\n                <div className='rgt-footer-pagination-container'>\r\n                    <span>Page: </span>\r\n                    <input \r\n                        onClick={e => e.target.select()}\r\n                        className='rgt-footer-page-input'\r\n                        type='number' \r\n                        value={totalPages ? page : 0} \r\n                        onChange={e => handlePagination(e.target.value*1)}\r\n                    />\r\n                    <span>of {totalPages}</span>\r\n                </div>\r\n\r\n                <button \r\n                    className={`rgt-footer-pagination-button${nextButtonDisabled ? ' rgt-disabled-button' : ''}`}\r\n                    disabled={page+1 > totalPages} \r\n                    onClick={e => handlePagination(page+1)}\r\n                >Next</button>\r\n            </React.Fragment>\r\n    }\r\n\r\n    return (\r\n        <div className=\"rgt-footer\">\r\n            {\r\n                footerRenderer ?\r\n                    footerRenderer({\r\n                        page, \r\n                        totalPages, \r\n                        handlePagination, \r\n                        pageSize, \r\n                        pageSizes, \r\n                        setPageSize, \r\n                        totalRows: totalItems,\r\n                        selectedRowsLength,\r\n                        numberOfRows\r\n                    })\r\n                    : \r\n                    <React.Fragment>\r\n                        { renderSelectedItems() }\r\n                        {\r\n                            isPaginated ?\r\n                                <div className='rgt-footer-right-container'>\r\n                                    { renderPageSize() }\r\n                                    { renderPagination() }\r\n                                </div>\r\n                                :\r\n                                null\r\n                        }\r\n                    </React.Fragment>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport {SortableContainer} from 'react-sortable-hoc';\r\nimport HeaderCell from './components/HeaderCell';\r\nimport Cell from './components/Cell';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport PropTypes from 'prop-types';\r\nimport TM from './tableManager';\r\nimport './index.css';\r\n\r\nconst DEFAULT_LOADER = <svg width=\"46\" height=\"46\" viewBox=\"-2 -2 42 42\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g fill=\"none\" fillRule=\"evenodd\">\r\n        <g transform=\"translate(1 1)\" strokeWidth=\"3\">\r\n            <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" stroke=\"#9e9e9e\" />\r\n            <path d=\"M36 18c0-9.94-8.06-18-18-18\" stroke=\"#607D8B\">\r\n                <animateTransform\r\n                    attributeName=\"transform\"\r\n                    type=\"rotate\"\r\n                    from=\"0 18 18\"\r\n                    to=\"360 18 18\"\r\n                    dur=\"1s\"\r\n                    repeatCount=\"indefinite\"/>\r\n            </path>\r\n        </g>\r\n    </g>\r\n</svg>;\r\n\r\nconst SortableList = SortableContainer(({style, className, children}) => <div className={className} style={style}>{children}</div>);\r\n \r\nconst GridTable = (props) => {\r\n\r\n    // ** state **\r\n\r\n    const [tableManager] = useState(TM())\r\n    const [colDefs, setCols] = useState(tableManager.generateColumns({columns: props.columns, minColumnWidth: props.minColumnWidth}));\r\n    const [items, setItems] = useState([]);\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n    const [listEl, setListEl] = useState(null);\r\n    const [sortByState, setSortBy] = useState(props.sortBy);\r\n    const [sortAsc, setSortAsc] = useState(props.sortAscending);\r\n    const [pageSizeState, setPageSize] = useState(props.pageSize);\r\n    const [page, setPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [searchTextState, setSearchText] = useState(props.searchText);\r\n    const [updatedRow, setUpdatedRow] = useState(null);\r\n    \r\n    \r\n    // ** refs **\r\n\r\n    const rgtRef = useRef(null);\r\n    const tableRef = useRef(null);\r\n\r\n\r\n    // ** data preparations **\r\n\r\n    // check if table has a 'checkbox' column\r\n    let tableHasSelection = !!colDefs.find(cd => cd.id === 'checkbox');\r\n    // set selectable items\r\n    let selectableItems = items.filter(it => props.isRowSelectable(it));\r\n    // set visible columns\r\n    let visibleColumns = colDefs.filter(cd => cd.visible !== false);\r\n    // recheck if last visible column is pinned\r\n    let lastColIsPinned = visibleColumns[visibleColumns.length-1]?.pinned;\r\n    // virtual column insertion\r\n    let virtualColConfig = {id: 'virtual', visible: true, width: \"auto\"};\r\n    let visibleColumnsWithVirtual = [ ...visibleColumns ];\r\n    if(!lastColIsPinned) visibleColumnsWithVirtual.push(virtualColConfig) \r\n    else visibleColumnsWithVirtual.splice(visibleColumns.length-1, 0, virtualColConfig);\r\n\r\n    // select all params\r\n    let selectAllIsChecked = selectableItems.length && selectableItems.every(si => selectedItems.find(id => si.id === id));\r\n    let selectAllIsDisabled = !selectableItems.length;\r\n    let isSelectAllIndeterminate = selectedItems.length && !selectAllIsChecked && selectableItems.some(si => selectedItems.find(id => si.id === id));\r\n\r\n    const setColDefs = (cols) => {\r\n        props.onColumnsChange ? props.onColumnsChange?.(cols) : setCols(cols);\r\n    }\r\n\r\n    // ** life cycles **\r\n\r\n    // set item in edit mode\r\n    useEffect(() => {\r\n        setUpdatedRow(items.find(item => item[props.rowIdField] === props.editRowId) || null);\r\n    }, [props.editRowId])\r\n\r\n    // update search term\r\n    useEffect(() => {\r\n        setSearchText(props.searchText || \"\");\r\n    }, [props.searchText])\r\n\r\n    // update search while reseting page & edit mode\r\n    useEffect(() => {\r\n        setPage(1);\r\n        setUpdatedRow(null);\r\n        props.onSearchChange?.(searchTextState);\r\n    }, [searchTextState])\r\n\r\n    // update selected items\r\n    useEffect(() => {\r\n        setSelectedItems(props.selectedRowsIds || []);\r\n    }, [props.selectedRowsIds])\r\n    \r\n    // update columns by props\r\n    useEffect(() => {\r\n        setCols(tableManager.generateColumns({columns: props.columns, minColumnWidth: props.minColumnWidth}));\r\n    }, [props.columns])\r\n\r\n    // sort by\r\n    useEffect(() => {\r\n        setSortBy(props.sortBy)\r\n    }, [props.sortBy])\r\n\r\n    // sort ascending\r\n    useEffect(() => {\r\n        setSortAsc(props.sortAscending)\r\n    }, [props.sortAscending])\r\n\r\n    // set grid's wrapper ref (used for auto scrolling the page to top when moving between pages)\r\n    useEffect(() => {\r\n        if(!rgtRef?.current?.children) return;\r\n        let children = [ ...rgtRef.current.children ];\r\n        setListEl(children.find(el => el.classList.contains('rgt-container')));\r\n    }, [listEl])\r\n    \r\n    // update items data if one of the following has changed\r\n    // props: rows, sortBy, pageSize\r\n    // state: sortByState, sortAsc, page, pageSizeState, totalPages, searchTextState\r\n    useEffect(() => {\r\n        tableManager.getNormalizedItems({columns: colDefs, items: props.rows, searchText: searchTextState, isPaginated, page, pageSize: pageSizeState, sortBy: sortByState, sortAsc, setItems, setTotalPages, searchMinChars: props.searchMinChars});\r\n    }, [props.rows, props.sortBy, sortByState, sortAsc, page, pageSizeState, props.pageSize, totalPages, searchTextState])\r\n\r\n    \r\n    // ** setters **\r\n    \r\n    const updateSelectedItems = (newSelectedItems) => {\r\n        setSelectedItems(newSelectedItems);\r\n        props.onSelectedRowsChange?.(newSelectedItems);\r\n    }\r\n\r\n\r\n    // ** renderers **\r\n\r\n    const handleSearchHighlight = (cellValue) => {\r\n        if(cellValue === searchTextState) return <span className='rgt-search-highlight'>{cellValue}</span> ;\r\n\r\n        let re = new RegExp(searchTextState,\"gi\");\r\n        let restArr = cellValue.split(re, cellValue.length);\r\n        let restItemsLength = 0;\r\n\r\n        return restArr.map((a, idx) => {\r\n            restItemsLength += a.length;\r\n\r\n            const el = (\r\n                <span key={idx}>\r\n                    {a} \r\n                    { \r\n                        (restArr.length !== idx+1) ? \r\n                            <span className='rgt-search-highlight'>\r\n                                {cellValue.slice(restItemsLength, searchTextState.length + restItemsLength)}\r\n                            </span> \r\n                            : null\r\n                    }\r\n                </span>\r\n            )\r\n            restItemsLength += searchTextState.length;\r\n\r\n            return el;\r\n        })\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        if(props.headerRenderer) return props.headerRenderer({searchText: searchTextState, setSearchText, setColumnVisibility: colId => tableManager.handleColumnVisibility({colId, columns: colDefs, setColumns: setColDefs}), columns: colDefs});\r\n        if(!manageColumnVisibility && !showSearch) return null;\r\n\r\n        return (\r\n            <Header \r\n                showSearch={props.showSearch}\r\n                manageColumnVisibility={props.manageColumnVisibility}\r\n                columnVisibilityRenderer={props.columnVisibilityRenderer}\r\n                colDefs={colDefs}\r\n                setColDefs={setColDefs}\r\n                searchRenderer={searchRenderer}\r\n                searchTextState={searchTextState}\r\n                setSearchText={setSearchText}\r\n            />\r\n        )\r\n    }\r\n\r\n    const renderHeaderCells = () => {\r\n\r\n        let virtualCell = <HeaderCell \r\n            key='virtual-col-header'\r\n            index={visibleColumns.length}\r\n            className={`rgt-cell-header rgt-cell-header-virtual-col${props.isHeaderSticky !== false ? ' rgt-cell-header-sticky' : ''}`}\r\n            column={{id: \"virtual-col\", name: \"\", isVirtual: true }} \r\n            handleResize={({e, target, column}) => tableManager.handleResize({e, target, column, tableRef, visibleColumns: visibleColumnsWithVirtual})}\r\n            stickyHeader={props.isHeaderSticky !== false}\r\n        />;\r\n        \r\n        let arr = [];\r\n        for (let idx = 0; idx < visibleColumns.length; idx++) {\r\n\r\n            let cd = visibleColumns[idx];\r\n            arr.push(\r\n                <HeaderCell \r\n                    key={idx} \r\n                    className={`rgt-cell-header rgt-cell-header-${cd.id === 'checkbox' ? 'checkbox' : cd.field}${(cd.sortable !== false && cd.id  !== 'checkbox' && !cd.isVirtual) ? ' rgt-clickable' : ''}${cd.sortable !== false && cd.id !== 'checkbox' ? ' rgt-cell-header-sortable' : ' rgt-cell-header-not-sortable'}${props.isHeaderSticky !== false ? ' rgt-cell-header-sticky' : ''}${cd.resizable !== false ? ' rgt-cell-header-resizable' : ' rgt-cell-header-not-resizable'}${cd.searchable !== false && cd.id !== 'checkbox' ? ' rgt-cell-header-searchable' : ' rgt-cell-header-not-searchable'}${cd.pinned && idx === 0 ? ' rgt-cell-header-pinned rgt-cell-header-pinned-left' : ''}${cd.pinned && idx === visibleColumns.length-1 ? ' rgt-cell-header-pinned rgt-cell-header-pinned-right' : ''} ${cd.className}`.trim()}\r\n                    index={idx} \r\n                    column={cd} \r\n                    handleResizeEnd={() => tableManager.handleResizeEnd({tableRef, columns: visibleColumnsWithVirtual, setColumns: setColDefs})}\r\n                    handleResize={({e, target, column}) => tableManager.handleResize({e, target, column, tableRef, visibleColumns: visibleColumnsWithVirtual})}\r\n                    stickyHeader={props.isHeaderSticky !== false}\r\n                    handleSort={colId => tableManager.handleSort({colId, onSortChange: props.onSortChange, setSortBy, setSortAsc, sortByState, sortAsc})}\r\n                    sortBy={sortByState}\r\n                    sortAsc={sortAsc}\r\n                    disableColumnsReorder={props.disableColumnsReorder}\r\n                    toggleSelectAll={() => tableManager.toggleSelectAll({selectAllIsChecked, selectedItems, selectableItems, onSelectedItemsChange: updateSelectedItems, isSelectAllIndeterminate, rowIdField: props.rowIdField})}\r\n                    selectAllIsChecked={selectAllIsChecked}\r\n                    selectAllIsDisabled={selectAllIsDisabled}\r\n                    isSelectAllIndeterminate={isSelectAllIndeterminate}\r\n                    isPinnedLeft={cd.pinned && idx === 0}\r\n                    isPinnedRight={cd.pinned && idx+1 === visibleColumns.length}\r\n                    sortIcons={props.icons.sort}\r\n                    dragHandleRenderer={props.dragHandleRenderer}\r\n                    { ...props.headerCellProps }\r\n                />\r\n            )\r\n        }\r\n\r\n        if(lastColIsPinned) arr.splice(visibleColumns.length-1, 0, virtualCell);\r\n        else arr.push(virtualCell);\r\n\r\n        return arr;\r\n    }\r\n\r\n    const renderDataCells = () => {\r\n        return items.map((d, idx1) => {\r\n\r\n            // row's id\r\n            let rowId = d[props.rowIdField];\r\n\r\n            // check whether the row selection should be disabled\r\n            let disableSelection = !(selectableItems.find(si => si[props.rowIdField] === rowId));\r\n\r\n            // row index by page\r\n            let rowIndex = (idx1+1) + (items.length * page - items.length);\r\n\r\n            // check if row is selected\r\n            let isChecked = !!(selectedItems.find(si => si === rowId));\r\n            \r\n            return(\r\n                <React.Fragment key={idx1}>\r\n                    {\r\n                        visibleColumns.map((cd, idx2) => {\r\n\r\n                            // getting the cell value from the getValue function on the column\r\n                            let cellValue = cd.getValue?.({value: (updatedRow?.[props.rowIdField] === rowId) ? updatedRow[cd.field] : d[cd.field], column: cd});\r\n                            cellValue = cellValue && cellValue.toString();\r\n                            \r\n                            // highlight searched text if...\r\n                            if(cd.searchable !== false && updatedRow?.[props.rowIdField] !== rowId && props.highlightSearch !== false && searchTextState && searchTextState.length >= props.searchMinChars && cellValue?.toLowerCase?.().includes(searchTextState.toLowerCase())) {\r\n                                cellValue = handleSearchHighlight(cellValue);\r\n                            }\r\n\r\n                            // class selectors\r\n                            let classNames = cd.id === 'checkbox' ? \r\n                                `rgt-cell rgt-cell-checkbox rgt-row-${rowIndex} rgt-row-${(idx1+1) % 2 === 0 ? 'even' : 'odd'}${cd.pinned && idx2 === 0 ? ' rgt-cell-pinned rgt-cell-pinned-left' : ''}${cd.pinned && idx2 === visibleColumns.length-1 ? ' rgt-cell-pinned rgt-cell-pinned-right' : ''}${isChecked ? ' rgt-row-selected' : ''} ${cd.className}`\r\n                                :\r\n                                cd.id === 'virtual' ?\r\n                                    `rgt-cell rgt-cell-virtual rgt-row-${rowIndex} rgt-row-${(idx1+1) % 2 === 0 ? 'even' : 'odd'}${!tableHasSelection ? '' : disableSelection ? ' rgt-row-not-selectable' : ' rgt-row-selectable'}${isChecked ? ' rgt-row-selected' : ''}`\r\n                                    :\r\n                                    `rgt-cell rgt-cell-${cd.field} rgt-row-${rowIndex} rgt-row-${(idx1+1) % 2 === 0 ? 'even' : 'odd'}${!tableHasSelection ? '' : disableSelection ? ' rgt-row-not-selectable' : ' rgt-row-selectable'}${cd.pinned && idx2 === 0 ? ' rgt-cell-pinned rgt-cell-pinned-left' : ''}${cd.pinned && idx2 === visibleColumns.length-1 ? ' rgt-cell-pinned rgt-cell-pinned-right' : ''}${isChecked ? ' rgt-row-selected' : ''}  ${cd.className}`\r\n\r\n                            return (\r\n                                <Cell \r\n                                    key={rowIndex+idx2}\r\n                                    rowId={rowId}\r\n                                    row={updatedRow?.[props.rowIdField] === rowId ? updatedRow : d} \r\n                                    rows={props.rows}\r\n                                    rowIndex={rowIndex} \r\n                                    onRowClick={props.onRowClick}\r\n                                    isChecked={isChecked}\r\n                                    colIndex={idx2} \r\n                                    colDefs={colDefs} \r\n                                    column={cd}\r\n                                    value={cellValue}\r\n                                    lastColIsPinned={lastColIsPinned}\r\n                                    className={classNames.trim()}\r\n                                    visibleColumns={visibleColumns}\r\n                                    cellRenderer={cd.cellRenderer}\r\n                                    editorCellRenderer={cd.editorCellRenderer}\r\n                                    searchText={searchTextState}\r\n                                    isEdit={updatedRow?.[props.rowIdField] === rowId && !!props.isRowEditable(d)}\r\n                                    setUpdatedRow={setUpdatedRow}\r\n                                    selectedItems={selectedItems}\r\n                                    onSelectedItemsChange={updateSelectedItems}\r\n                                    disableSelection={disableSelection}\r\n                                    tableManager={tableManager}\r\n                                    {...props.cellProps}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </React.Fragment>\r\n            )\r\n        })\r\n    }\r\n\r\n    const renderFooter = () => {\r\n        return (\r\n            <Footer \r\n                totalPages={totalPages} \r\n                page={page} \r\n                pageSize={pageSizeState} \r\n                handlePagination={goToPage => tableManager.handlePagination({goToPage, listEl, totalPages, setPage, selectedItems, onSelectedItemsChange: updateSelectedItems})}\r\n                setPageSize={setPageSize} \r\n                pageSizes={props.pageSizes}\r\n                isPaginated={props.isPaginated}\r\n                footerRenderer={props.footerRenderer}\r\n                selectedRowsLength={selectedItems.length}\r\n                setSelectedItems={setSelectedItems}\r\n                numberOfRows={items.length}\r\n                totalItems={props.rows.length}\r\n                tableHasSelection={tableHasSelection}\r\n            />\r\n        )\r\n    }\r\n\r\n    const renderLoader = () => (\r\n            <div className='rgt-no-data-container'>\r\n                {\r\n                    props.loaderRenderer ?\r\n                        props.loaderRenderer() \r\n                        :\r\n                        DEFAULT_LOADER\r\n                }\r\n            </div>\r\n    )\r\n\r\n    const renderNoResults = () => (\r\n            <div className='rgt-no-data-container'>\r\n                {\r\n                    props.noResultsRenderer ?\r\n                        props.noResultsRenderer() \r\n                        : \r\n                        'No Results :('\r\n                }\r\n            </div>\r\n    )\r\n\r\n    let { \r\n        columns,\r\n        rows,\r\n        isLoading,\r\n        onColumnsChange,\r\n        onSelectedRowsChange,\r\n        editRowId,\r\n        isRowSelectable,\r\n        isRowEditable,\r\n        onSortChange,\r\n        minColumnWidth,\r\n        pageSizes,\r\n        pageSize,\r\n        dragHandleRenderer,\r\n        headerRenderer,\r\n        columnVisibilityRenderer,\r\n        footerRenderer,\r\n        selectedRowsIds,\r\n        noResultsRenderer,\r\n        manageColumnVisibility,\r\n        isHeaderSticky,\r\n        searchText,\r\n        highlightSearch,\r\n        onSearchChange,\r\n        searchRenderer,\r\n        isPaginated,\r\n        showSearch,\r\n        sortBy,\r\n        sortAscending,\r\n        cellProps,\r\n        headerCellProps,\r\n        searchMinChars,\r\n        onRowClick,\r\n        rowIdField,\r\n        disableColumnsReorder,\r\n        loaderRenderer,\r\n        ...rest\r\n    } = props;\r\n\r\n    return (\r\n        <div ref={rgtRef} className='rgt-wrapper' {...rest} >\r\n            { renderHeader() }\r\n            <SortableList\r\n                ref={tableRef}\r\n                className='rgt-container'\r\n                helperContainer={listEl}\r\n                axis=\"x\" \r\n                lockToContainerEdges \r\n                distance={10} \r\n                lockAxis=\"x\" \r\n                useDragHandle={!!dragHandleRenderer}\r\n                onSortStart={tableManager.handleColumnSortStart}\r\n                onSortEnd={sortObj => tableManager.handleColumnSortEnd({sortObj, visibleColumns, columns: colDefs, setColumns: setColDefs})}\r\n                style={{\r\n                    display: 'grid',\r\n                    overflow: 'auto',\r\n                    gridTemplateColumns: (visibleColumnsWithVirtual.filter(t => t.visible).map(g => g.width)).join(\" \"),\r\n                    gridTemplateRows: `repeat(${items.length+1}, max-content)`,\r\n                }}\r\n            >\r\n                { renderHeaderCells() }\r\n                { isLoading ? renderLoader() : items.length ? renderDataCells() : renderNoResults() }\r\n            </SortableList>\r\n            { renderFooter() }\r\n        </div>\r\n    )\r\n}\r\n\r\nGridTable.defaultProps = {\r\n    columns: [],\r\n    rows: [],\r\n    rowIdField: 'id',\r\n    minColumnWidth: 70,\r\n    pageSizes: [20, 50, 100],\r\n    pageSize: 20,\r\n    isLoading: false,\r\n    manageColumnVisibility: true,\r\n    isHeaderSticky: true,\r\n    searchText: '',\r\n    highlightSearch: true,\r\n    searchMinChars: 2,\r\n    isPaginated: true,\r\n    showSearch: true,\r\n    sortBy: null,\r\n    sortAscending: true,\r\n    disableColumnsReorder: false,\r\n    isRowSelectable: row => true,\r\n    isRowEditable: row => true,\r\n    icons: { sort: { ascending: <React.Fragment>&uarr;</React.Fragment>, descending: <React.Fragment>&darr;</React.Fragment> } }\r\n};\r\n\r\nGridTable.propTypes = {\r\n    // general\r\n    columns: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    rows: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    rowIdField: PropTypes.string,\r\n    selectedRowsIds: PropTypes.array,\r\n    searchText: PropTypes.string,\r\n    isRowSelectable: PropTypes.func,\r\n    isRowEditable: PropTypes.func,\r\n    editRowId: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]),\r\n    cellProps: PropTypes.object,\r\n    headerCellProps: PropTypes.object,\r\n    // table config\r\n    isPaginated: PropTypes.bool,\r\n    disableColumnsReorder: PropTypes.bool,\r\n    pageSizes: PropTypes.arrayOf(PropTypes.number),\r\n    pageSize: PropTypes.number,\r\n    sortBy: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]),\r\n    sortAscending: PropTypes.bool,\r\n    minColumnWidth: PropTypes.number,\r\n    highlightSearch: PropTypes.bool,\r\n    showSearch: PropTypes.bool,\r\n    searchMinChars: PropTypes.number,\r\n    isLoading: PropTypes.bool,\r\n    isHeaderSticky: PropTypes.bool,\r\n    manageColumnVisibility: PropTypes.bool,\r\n    icons: PropTypes.object,\r\n    // events\r\n    onColumnsChange: PropTypes.func,\r\n    onSearchChange: PropTypes.func,\r\n    onSelectedRowsChange: PropTypes.func,\r\n    onSortChange: PropTypes.func,\r\n    onRowClick: PropTypes.func,\r\n    // custom renderers\r\n    headerRenderer: PropTypes.func,\r\n    footerRenderer: PropTypes.func,\r\n    loaderRenderer: PropTypes.func,\r\n    noResultsRenderer: PropTypes.func,\r\n    searchRenderer: PropTypes.func,\r\n    columnVisibilityRenderer: PropTypes.func,\r\n    dragHandleRenderer: PropTypes.func,\r\n\r\n};\r\n\r\nexport default GridTable;","import React from 'react';\r\n\r\nconst Username = ({value, field, onChange, isEdit, row, columnData, rowIndex, searchText}) => {\r\n\r\n    return (\r\n        <div style={{position: 'relative', padding: '0 20px', display: 'flex', width: '100%', height: '100%', alignItems: 'center'}}>\r\n            {\r\n                isEdit ?\r\n                    <React.Fragment>\r\n                        <img src={row.avatar} alt=\"avatar\" />    \r\n                        <input\r\n                            autoFocus \r\n                            style={{position: 'absolute', height: 28, width: 'calc(100% - 82px)', top: 10, right: 20, bottom: 0, border: 'none', borderBottom: '1px solid #eee', outline: 'none', fontSize: 16, padding: 0, fontFamily: 'inherit'}} \r\n                            type=\"text\" \r\n                            value={value} \r\n                            onChange={e => onChange({...row, [field]: e.target.value})}\r\n                        />\r\n                    </React.Fragment>\r\n                    :\r\n                    <React.Fragment>\r\n                        <img src={row.avatar} alt=\"avatar\" />\r\n                        <span style={{marginLeft: 10, whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis'}}>{value}</span>\r\n                    </React.Fragment>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Username;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport GridTable from '@nadavshaar/react-grid-table';\r\nimport '@nadavshaar/react-grid-table/dist/index.css';\r\n\r\nimport Username from \"./components/Username\";\r\nimport * as MOCK_DATA from \"./MOCK_DATA.json\";\r\nimport './index.css';\r\n\r\nconst EDIT_SVG = <svg height=\"16\" viewBox=\"0 0 20 20\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#fff\" stroke=\"#1856bf\" transform=\"translate(2 2)\"><path d=\"m8.24920737-.79402796c1.17157287 0 2.12132033.94974747 2.12132033 2.12132034v13.43502882l-2.12132033 3.5355339-2.08147546-3.495689-.03442539-13.47488064c-.00298547-1.16857977.94191541-2.11832105 2.11049518-2.12130651.00180188-.00000461.00360378-.00000691.00540567-.00000691z\" transform=\"matrix(.70710678 .70710678 -.70710678 .70710678 8.605553 -3.271644)\"/><path d=\"m13.5 4.5 1 1\"/></g></svg>;\r\nconst CANCEL_SVG = <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" stroke=\"#dc1e1e\" transform=\"translate(5 5)\"><path d=\"m.5 10.5 10-10\"/><path d=\"m10.5 10.5-10-10z\"/></g></svg>;\r\nconst SAVE_SVG = <svg height=\"20\" viewBox=\"0 0 20 20\" width=\"20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.5 5.5 3 3 8.028-8\" fill=\"none\" stroke=\"#4caf50\" transform=\"translate(5 6)\"/></svg>;\r\n\r\nconst styles = {\r\n\tselect: {margin: '0 20px'},\r\n\tbuttonsCellContainer: {padding: '0 20px', width: '100%', height: '100%', display: 'flex', justifyContent: 'flex-end', alignItems: 'center'},\r\n\teditButton: {background: '#f3f3f3', outline: 'none', cursor: 'pointer', padding: 4, display: 'inline-flex', border: 'none', borderRadius: '50%', boxShadow: '1px 1px 2px 0px rgb(0 0 0 / .3)'},\r\n\tbuttonsCellEditorContainer: {height: '100%', width: '100%', display: 'inline-flex', padding: '0 20px', justifyContent: 'flex-end', alignItems: 'center'},\r\n\tcancelButton: {background: '#f3f3f3', outline: 'none', cursor: 'pointer', marginRight: 10, padding: 2, display: 'inline-flex', border: 'none', borderRadius: '50%', boxShadow: '1px 1px 2px 0px rgb(0 0 0 / .3)'},\r\n\tsaveButton: {background: '#f3f3f3', outline: 'none', cursor: 'pointer', padding: 2, display: 'inline-flex', border: 'none', borderRadius: '50%', boxShadow: '1px 1px 2px 0px rgb(0 0 0 / .3)'}\r\n}\r\n\r\nconst App = () => {\r\n    \r\n\tconst [editRowId, setEditRowId] = useState(null);\r\n\tconst [rowsData, setRowsData] = useState([]);\r\n    const [isLoading, setLoading] = useState(false);\r\n\t\r\n    useEffect(() => {\r\n\t\tsetLoading(true);\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetRowsData(MOCK_DATA.default)\r\n\t\t\tsetLoading(false);\r\n\t\t}, 1500);\r\n\t}, [])\r\n\r\n    const columns = [\r\n        {\r\n            id: 'checkbox',\r\n            pinned: true,\r\n            width: '54px'\r\n        },\r\n        {\r\n            id: 2, \r\n            field: 'username', \r\n            label: 'Username',\r\n            cellRenderer: Username,\r\n            editorCellRenderer: props => <Username {...props} isEdit />\r\n        }, \r\n        {\r\n            id: 3,\r\n            field: 'first_name',\r\n            label: 'First Name'\r\n        }, \r\n        {\r\n            id: 4, \r\n            field: 'last_name', \r\n            label: 'Last Name'\r\n        }, \r\n        {\r\n            id: 5, \r\n            field: 'email',\r\n            label: 'Email'\r\n        },\r\n        {\r\n            id: 6, \r\n            field: 'gender', \r\n            label: 'Gender',\r\n            editorCellRenderer: ({value, field, onChange, row, rows, column, rowIndex}) => (\r\n\t\t\t\t<select \r\n\t\t\t\t\tstyle={styles.select} \r\n\t\t\t\t\tvalue={value} \r\n\t\t\t\t\tonChange={e => onChange({...row, [field]: e.target.value})}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option>Male</option>\r\n\t\t\t\t\t<option>Female</option>\r\n\t\t\t\t</select>\r\n\t\t\t)\r\n        },\r\n        {\r\n            id: 7, \r\n            field: 'ip_address', \r\n            label: 'IP Address'\r\n        },\r\n        {\r\n            id: 8, \r\n            field: 'last_visited', \r\n            label: 'Last Visited',\r\n            sort: ({a, b, isAscending}) => {\r\n                let aa = a.split('/').reverse().join(),\r\n                bb = b.split('/').reverse().join();\r\n                return aa < bb ? isAscending ? -1 : 1 : (aa > bb ? isAscending ? 1 : -1 : 0);\r\n            }\r\n        },\r\n        {\r\n            id: 9, \r\n            field: 'buttons', \r\n            label: '',\r\n            pinned: true,\r\n            sortable: false,\r\n            resizable: false,\r\n            cellRenderer: ({value, row, column, rowIndex, searchText}) => (\r\n                <div style={styles.buttonsCellContainer}>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\ttitle=\"Edit\" \r\n\t\t\t\t\t\tstyle={styles.editButton} \r\n\t\t\t\t\t\tonClick={e => setEditRowId(row.id)} \r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ EDIT_SVG }\r\n\t\t\t\t\t</button>\r\n                </div>\r\n            ),\r\n            editorCellRenderer: ({value, field, onChange, row, rows, column, rowIndex}) => (\r\n                <div style={styles.buttonsCellEditorContainer}>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\ttitle=\"Cancel\" \r\n\t\t\t\t\t\tstyle={styles.cancelButton} \r\n\t\t\t\t\t\tonClick={e => setEditRowId(null)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ CANCEL_SVG }\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\ttitle=\"Save\" \r\n\t\t\t\t\t\tstyle={styles.saveButton} \r\n\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\tlet rowsClone = [...rows];\r\n\t\t\t\t\t\t\tlet updatedRowIndex = rowsClone.findIndex(r => r.id === row.id);\r\n\t\t\t\t\t\t\trowsClone[updatedRowIndex] = row;\r\n\r\n\t\t\t\t\t\t\tsetRowsData(rowsClone);\r\n\t\t\t\t\t\t\tsetEditRowId(null);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ SAVE_SVG }\r\n\t\t\t\t\t</button>\r\n                </div>\r\n            )\r\n        }\r\n\t];\r\n\t\r\n    return (\r\n        <GridTable \r\n\t\t\tcolumns={columns}\r\n            rows={rowsData} \r\n            isLoading={isLoading}\r\n            editRowId={editRowId}\r\n            style={{boxShadow: 'rgb(0 0 0 / 30%) 0px 40px 40px -20px'}} \r\n        />\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}